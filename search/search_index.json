{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Warning This is the construction site for the upcoming Leap and Tumbleweed documentation. Please do not consider any of this official documentation. For official documentation, see: Standard documentation based on Leap Tumbleweed-specific knowledgebase Welcome \u2693\ufe0e Are you looking for better Linux documentation? You are in the right place. This is a young project that aims to provide a user friendly guide for quickly installing and setting up openSUSE with minimum fuss. For new users \u2693\ufe0e The documentation is laid out in a user friendly way. It caters to beginners and other people new to Linux, and helps you get running quickly. Installing Linux can seem daunting at first, because there are a lot of new concepts, choices, and options. Choice is good, but it can sometimes be overwhelming and confusing. Initially, the installation instruction will cover only the necessary options and configuration choices to help you quickly set up a running system with defaults suitable for daily use. With the system running and productive you can learn how to perform different routine system tasks such as installing apps, adjusting the system settings, or customizing openSUSE. And, if you're so inclined, start honing your Linux skills. For experienced users \u2693\ufe0e For experienced Linux users the documentation includes short pointers on how things are done in openSUSE and how things are different to other Linux distros. Links to advanced topics are provided to get you acquainted with the system, and quickly up and running. Documentation sections \u2693\ufe0e Pre-install \u2693\ufe0e The pre-install documentation gives you everything you need to get a system running. This can be a simple installation using default settings, or you can make a few choices, such as choosing a desktop environment. You can find out more about things like desktop environments in this section. For experienced users, this section describes what differentiates openSUSE from other distros, and helps you get to know the unique features and make informed choices during the install process. For example, find out about the power of snapshots using Btrfs, advanced distros featuring atomic transactional updates, and distros designed to run container loads. Install \u2693\ufe0e Now that you have a plan, this section will walk you through preparing installation media, and performing the installation based on the choice you made during pre-install. Experienced users will find a quick reference covering notable installation options and procedures. At this stage and with minimum fuss you will have a running system with sane defaults that is ready for daily use. From here you can move forward and find out more as you need. Operating system (OS) orientation \u2693\ufe0e This section contains walk-throughs for the different features of Linux in general and openSUSE in particular. It covers the user interface, system settings, installing and upgrading software, and general good computing practices. You will also learn how to use unique openSUSE features like YaST and snapshots. After install setup \u2693\ufe0e This section covers setting up devices, such as printers, scanners, or a dedicated graphics card. You will also find information on how to install software that is not in the official openSUSE software repositories. Advanced install \u2693\ufe0e If you are an experienced user you might want to set up your system in a particular way to take advantage of the latest Linux technologies. This section contains information about how to set up openSUSE with technologies such as advanced partitioning schemes, encryption, display servers, vulnerability mitigation, and similar. Advanced topics \u2693\ufe0e Now that you're familiar with Linux and openSUSE, you want to get the most out of it. This section contains information on doing more advanced tasks with YaST, Zypper, Snapper, and other tools. Other documentation \u2693\ufe0e This section contains reference documentation and more guides suitable for corporate users and system administrators. Documentation is available in HTML, PDF and EPUB.","title":"Home"},{"location":"#welcome","text":"Are you looking for better Linux documentation? You are in the right place. This is a young project that aims to provide a user friendly guide for quickly installing and setting up openSUSE with minimum fuss.","title":"Welcome"},{"location":"#for-new-users","text":"The documentation is laid out in a user friendly way. It caters to beginners and other people new to Linux, and helps you get running quickly. Installing Linux can seem daunting at first, because there are a lot of new concepts, choices, and options. Choice is good, but it can sometimes be overwhelming and confusing. Initially, the installation instruction will cover only the necessary options and configuration choices to help you quickly set up a running system with defaults suitable for daily use. With the system running and productive you can learn how to perform different routine system tasks such as installing apps, adjusting the system settings, or customizing openSUSE. And, if you're so inclined, start honing your Linux skills.","title":"For new users"},{"location":"#for-experienced-users","text":"For experienced Linux users the documentation includes short pointers on how things are done in openSUSE and how things are different to other Linux distros. Links to advanced topics are provided to get you acquainted with the system, and quickly up and running.","title":"For experienced users"},{"location":"#documentation-sections","text":"","title":"Documentation sections"},{"location":"#pre-install","text":"The pre-install documentation gives you everything you need to get a system running. This can be a simple installation using default settings, or you can make a few choices, such as choosing a desktop environment. You can find out more about things like desktop environments in this section. For experienced users, this section describes what differentiates openSUSE from other distros, and helps you get to know the unique features and make informed choices during the install process. For example, find out about the power of snapshots using Btrfs, advanced distros featuring atomic transactional updates, and distros designed to run container loads.","title":"Pre-install"},{"location":"#install","text":"Now that you have a plan, this section will walk you through preparing installation media, and performing the installation based on the choice you made during pre-install. Experienced users will find a quick reference covering notable installation options and procedures. At this stage and with minimum fuss you will have a running system with sane defaults that is ready for daily use. From here you can move forward and find out more as you need.","title":"Install"},{"location":"#operating-system-os-orientation","text":"This section contains walk-throughs for the different features of Linux in general and openSUSE in particular. It covers the user interface, system settings, installing and upgrading software, and general good computing practices. You will also learn how to use unique openSUSE features like YaST and snapshots.","title":"Operating system (OS) orientation"},{"location":"#after-install-setup","text":"This section covers setting up devices, such as printers, scanners, or a dedicated graphics card. You will also find information on how to install software that is not in the official openSUSE software repositories.","title":"After install setup"},{"location":"#advanced-install","text":"If you are an experienced user you might want to set up your system in a particular way to take advantage of the latest Linux technologies. This section contains information about how to set up openSUSE with technologies such as advanced partitioning schemes, encryption, display servers, vulnerability mitigation, and similar.","title":"Advanced install"},{"location":"#advanced-topics","text":"Now that you're familiar with Linux and openSUSE, you want to get the most out of it. This section contains information on doing more advanced tasks with YaST, Zypper, Snapper, and other tools.","title":"Advanced topics"},{"location":"#other-documentation","text":"This section contains reference documentation and more guides suitable for corporate users and system administrators. Documentation is available in HTML, PDF and EPUB.","title":"Other documentation"},{"location":"bluetooth/","text":"Pairing a Bluetooth device across different operating systems \u2693\ufe0e With Windows 10 (adapted from StackExchange ) \u2693\ufe0e Pair all devices on Linux Pair all devices on Windows From Windows, go to Device & Printers in Control Panel and go to your Bluetooth device's properties.\u2002Then, in the Bluetooth section, you can find the unique identifier. Copy it as you will need it. Download PsExec from here . Unzip the zip you downloaded and open a CMD window with elevated privileges. (Click the Start menu, search for cmd, then right-click the CMD and click Run as Administrator .) cd into the folder where you unzipped your download. Run psexec -s -i regedit.exe Navigate to find the keys under HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\BTHPORT\\Parameters\\Keys . If there is no CurrentControlSet , try ControlSet001 . You should see a few keys labels with the MAC addresses -- write down the MAC address associated with the unique identifier you copied before. Go back to Linux (if not in Linux) and add your Windows key to your Linux config entries. Just note that the Bluetooth port's MAC address is formatted differently when moving from Windows to Linux - referenced as aa1122334455 in Windows in my example above. The Linux version will be in all caps and punctuated by ':' after every two characters - for example AA:11:22:33:44:55 .\u2002 Switch to root: do sudo -s cd to your Bluetooth config location at /var/lib/bluetooth/[bth port MAC addresses] Here you'll find folders for each device you've paired with. The folder names being the Bluetooth devices' MAC addresses and contain a single file info. In these files, you'll see the link key you need to replace with your Windows ones, like so: [LinkKey] Key=< NEW KEY, ex. B99999999FFFFFFFFF999999999FFFFF > Finally restart your bluetooth systemd service with sudo systemctl restart bluetooth","title":"Bluetooth"},{"location":"bluetooth/#pairing-a-bluetooth-device-across-different-operating-systems","text":"","title":"Pairing a Bluetooth device across different operating systems"},{"location":"bluetooth/#with-windows-10-adapted-from-stackexchange","text":"Pair all devices on Linux Pair all devices on Windows From Windows, go to Device & Printers in Control Panel and go to your Bluetooth device's properties.\u2002Then, in the Bluetooth section, you can find the unique identifier. Copy it as you will need it. Download PsExec from here . Unzip the zip you downloaded and open a CMD window with elevated privileges. (Click the Start menu, search for cmd, then right-click the CMD and click Run as Administrator .) cd into the folder where you unzipped your download. Run psexec -s -i regedit.exe Navigate to find the keys under HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\BTHPORT\\Parameters\\Keys . If there is no CurrentControlSet , try ControlSet001 . You should see a few keys labels with the MAC addresses -- write down the MAC address associated with the unique identifier you copied before. Go back to Linux (if not in Linux) and add your Windows key to your Linux config entries. Just note that the Bluetooth port's MAC address is formatted differently when moving from Windows to Linux - referenced as aa1122334455 in Windows in my example above. The Linux version will be in all caps and punctuated by ':' after every two characters - for example AA:11:22:33:44:55 .\u2002 Switch to root: do sudo -s cd to your Bluetooth config location at /var/lib/bluetooth/[bth port MAC addresses] Here you'll find folders for each device you've paired with. The folder names being the Bluetooth devices' MAC addresses and contain a single file info. In these files, you'll see the link key you need to replace with your Windows ones, like so: [LinkKey] Key=< NEW KEY, ex. B99999999FFFFFFFFF999999999FFFFF > Finally restart your bluetooth systemd service with sudo systemctl restart bluetooth","title":"With Windows 10 (adapted from StackExchange)"},{"location":"codecs/","text":"Installing Codecs \u2693\ufe0e You need to play online or offline multimedia content but the content does not play or you receive errors. Usually this is a sign of missing codecs. Due to legal limitations proprietary codecs can't be stored and served directly from the openSUSE / SUSE infrastructure. To install certain codec packages you will need to add the Packman repository and install the required software from there. Some commonly used and installed codecs are: ffmpeg gstreamer-plugins-good gstreamer-plugins-bad gstreamer-plugins-libav gstreamer-plugins-ugly libavcodec-full vlc-codecs You can get them using Zypper , OBS Package Installer ( opi ) or YaST . OBS Package Installer \u2693\ufe0e opi can be used to search and install software from the Open Build Service (OBS) and it works on openSUSE and SUSE . To install the required codecs: 1. Launch a terminal emulator ( Konsole , Gnome Terminal etc.), 1. Install opi : sudo zypper install opi 1. Install codecs with opi : opi codecs 1. Update the system: zypper dist-upgrade --from packman The manual way \u2693\ufe0e Adding the Packman repository \u2693\ufe0e For installing codecs we have to add the Packman repository. Remember if things don\u2019t work after installing the codecs, make sure all your multimedia packages are coming from Packman. Using the command line \u2693\ufe0e Use the following commands to add all of the third-party Packman repository (Packman Essentials is included), according to your installed openSUSE version: Tumbleweed \u2693\ufe0e sudo zypper addrepo -cfp 90 'https://ftp.gwdg.de/pub/linux/misc/packman/suse/openSUSE_Tumbleweed/' packman Leap \u2693\ufe0e sudo zypper addrepo -cfp 90 'https://ftp.gwdg.de/pub/linux/misc/packman/suse/openSUSE_Leap_$releasever/' packman Using YaST \u2693\ufe0e Launch YaST , Select Software Repositories , Press Add (lower left corner), From the list select Community repositories and press Next , Select Packman Repository and press Ok . Installing codecs \u2693\ufe0e Using the command line \u2693\ufe0e Refresh your local repository: sudo zypper ref , Install some generally needed codecs: zypper install k3b-codecs ffmpeg lame gstreamer-plugins-libav gstreamer-plugins-bad gstreamer-plugins-ugly gstreamer-plugins-good gstreamer-fluendo-mp3 libdvdcss2 , Update everyting to the latest Version zypper dist-upgrade --from packman . Using YaST \u2693\ufe0e Launch YaST , Select Software Management , View > Repositories > Packman Repository, Click \"Switch system packages\" to packages from Packman repository. Furthermore you can type in the Search field the name of the codec packages you're looking for.","title":"Audio & Video Codecs"},{"location":"codecs/#installing-codecs","text":"You need to play online or offline multimedia content but the content does not play or you receive errors. Usually this is a sign of missing codecs. Due to legal limitations proprietary codecs can't be stored and served directly from the openSUSE / SUSE infrastructure. To install certain codec packages you will need to add the Packman repository and install the required software from there. Some commonly used and installed codecs are: ffmpeg gstreamer-plugins-good gstreamer-plugins-bad gstreamer-plugins-libav gstreamer-plugins-ugly libavcodec-full vlc-codecs You can get them using Zypper , OBS Package Installer ( opi ) or YaST .","title":"Installing Codecs"},{"location":"codecs/#obs-package-installer","text":"opi can be used to search and install software from the Open Build Service (OBS) and it works on openSUSE and SUSE . To install the required codecs: 1. Launch a terminal emulator ( Konsole , Gnome Terminal etc.), 1. Install opi : sudo zypper install opi 1. Install codecs with opi : opi codecs 1. Update the system: zypper dist-upgrade --from packman","title":"OBS Package Installer"},{"location":"codecs/#the-manual-way","text":"","title":"The manual way"},{"location":"codecs/#adding-the-packman-repository","text":"For installing codecs we have to add the Packman repository. Remember if things don\u2019t work after installing the codecs, make sure all your multimedia packages are coming from Packman.","title":"Adding the Packman repository"},{"location":"codecs/#using-the-command-line","text":"Use the following commands to add all of the third-party Packman repository (Packman Essentials is included), according to your installed openSUSE version:","title":"Using the command line"},{"location":"codecs/#tumbleweed","text":"sudo zypper addrepo -cfp 90 'https://ftp.gwdg.de/pub/linux/misc/packman/suse/openSUSE_Tumbleweed/' packman","title":"Tumbleweed"},{"location":"codecs/#leap","text":"sudo zypper addrepo -cfp 90 'https://ftp.gwdg.de/pub/linux/misc/packman/suse/openSUSE_Leap_$releasever/' packman","title":"Leap"},{"location":"codecs/#using-yast","text":"Launch YaST , Select Software Repositories , Press Add (lower left corner), From the list select Community repositories and press Next , Select Packman Repository and press Ok .","title":"Using YaST"},{"location":"codecs/#installing-codecs_1","text":"","title":"Installing codecs"},{"location":"codecs/#using-the-command-line_1","text":"Refresh your local repository: sudo zypper ref , Install some generally needed codecs: zypper install k3b-codecs ffmpeg lame gstreamer-plugins-libav gstreamer-plugins-bad gstreamer-plugins-ugly gstreamer-plugins-good gstreamer-fluendo-mp3 libdvdcss2 , Update everyting to the latest Version zypper dist-upgrade --from packman .","title":"Using the command line"},{"location":"codecs/#using-yast_1","text":"Launch YaST , Select Software Management , View > Repositories > Packman Repository, Click \"Switch system packages\" to packages from Packman repository. Furthermore you can type in the Search field the name of the codec packages you're looking for.","title":"Using YaST"},{"location":"hybrid_graphics/","text":"Enabling Hybrid Graphics \u2693\ufe0e This section is meant for users with dual 'graphic cards' (GPUs), often found in high-end laptops and essential to a pleasant video intensive experience (gaming, streaming, video editing, etc.) On these hardware configurations, there is a software switch that picks the integrated graphics processor for rendering most desktop applications, switching to the dedicated GPU for more demanding tasks. The switch can be more or less fine-grained. Fine-grained switches, such as the ones used in Kdenlive and OBS Studio , are able to use VAAPI and NVENC to offload specific processes of encoding/decoding to the dedicated GPU, while a coarse-grained switch would have to offload an entire program instead. Some hardware configurations have a multiplexer ( mux ), a hardware switch that can be configured from the machine's UEFI to select the main graphics processor. A multiplexer is to be preferred if your hardware has one, as it performs better since there is no render offloading involved. This matters especially for users without external monitors, as the HDMI and DisplayPort outputs are usually connected directly to the dedicated GPU. Switching the multiplexer to the dedicated GPU or using an external monitor would thus offer better performance than using the built-in monitor or offloading the rendering to the dedicated GPU. Update your system before proceeding to the next steps: sudo zypper dup Dedicated NVIDIA GPU \u2693\ufe0e To use an external monitor or be able to offload rendering to the NVIDIA GPU, you'll need to follow the next steps. The external monitor will work when you switch to the NVIDIA GPU. This section applies to users interested in the proprietary NVIDIA driver. Getting the necessary software \u2693\ufe0e Install the correct Nvidia driver . Install the suse-prime package using zypper or YaST. If you want to install via zypper run the following command in a terminal session: sudo zypper in suse-prime . Users on NVIDIA graphic cards released before GeForce 600 series should instead install suse-prime-bbswitch . Info In case you are using KDE, a widget called SUSE Prime Selector can be added as graphical way to switch graphics. You can install it with the command sudo zypper in plasma5-applet-suse-prime . See the next sections according to your integrated and dedicated GPU combination. Alternatively, to offload rendering to the dedicated GPU (NVIDIA Optimus), see Offloading specific applications to the NVIDIA GPU . This allows you to use both graphical units simultaneously. Intel and NVIDIA \u2693\ufe0e Either one of these two options: * From a terminal session: to switch to the NVIDIA GPU run sudo prime-select nvidia ; conversely, for the Intel GPU run sudo prime-select intel . After executing either command, log out and back on to apply the changes. * With the KDE widget SUSE Prime Selector , just click it and select Switch to NVidia . Then log out and back in and you should be set. AMD APU and NVIDIA \u2693\ufe0e When using XOrg 1.20.6 or higher: to make the APU the primary GPU and have the ability to offload specific applications to the dedicated GPU, you can skip to the offloading section below. If you are using an older release of XOrg, such as the case for Leap 15.2, or you wish to exclusively use the NVIDIA card, pick between the following steps: To enable only the NVIDIA GPU, run sudo prime-select nvidia from the command line. To enable the AMD GPU, run sudo prime-select unset . After executing either command, log out and back on to apply the changes. Offloading specific applications to the Nvidia GPU \u2693\ufe0e Warning This section only applies to users with the propietary driver and NVIDIA GeForce 600 series or higher. With the integrated Intel GPU or AMD APU set as your main GPU, you can also offload specific applications using an envoronment variable. For example, to run supertuxkart using the the NVIDIA driver, you can launch it from a terminal session as follows: __NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia __VK_LAYER_NV_optimus=NVIDIA_only supertuxkart To offload a game from Steam using the NVIDIA driver, you can modify properties of the game, by right clicking it, going to Properties choosing Set Launch Options and adding a line like this: __NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia __VK_LAYER_NV_optimus=NVIDIA_only %command% For the offload process to work properly on integrated Intel cards, make sure the file /etc/X11/xorg.conf.d/90-intel.conf exists. If you do not have it, enable the NVIDIA card once and switch back to the integrated GPU; the required file will be created automatically along the way. Note that this only applies to XOrg sessions. If everything worked out fine for you, feel free to copy and modify the .desktop files of your more demanding programs (like MATLAB or Octave) and append the enviroment variables to the Exec section of the file: Exec=__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia __VK_LAYER_NV_optimus=NVIDIA_only /usr/bin/octave --gui %f This makes the desired program offload to the dedicated GPU everytime you launch it from the shortcut. Dedicated AMD GPU or nouveau \u2693\ufe0e To offload anything to the AMD GPU, simply use the special enviroment variable to launch the desired program, as per the following example: DRI_PRIME=1 supertuxkart The same applies to users with the open source nouveau driver for NVIDIA cards.","title":"Hybrid GPUs"},{"location":"hybrid_graphics/#enabling-hybrid-graphics","text":"This section is meant for users with dual 'graphic cards' (GPUs), often found in high-end laptops and essential to a pleasant video intensive experience (gaming, streaming, video editing, etc.) On these hardware configurations, there is a software switch that picks the integrated graphics processor for rendering most desktop applications, switching to the dedicated GPU for more demanding tasks. The switch can be more or less fine-grained. Fine-grained switches, such as the ones used in Kdenlive and OBS Studio , are able to use VAAPI and NVENC to offload specific processes of encoding/decoding to the dedicated GPU, while a coarse-grained switch would have to offload an entire program instead. Some hardware configurations have a multiplexer ( mux ), a hardware switch that can be configured from the machine's UEFI to select the main graphics processor. A multiplexer is to be preferred if your hardware has one, as it performs better since there is no render offloading involved. This matters especially for users without external monitors, as the HDMI and DisplayPort outputs are usually connected directly to the dedicated GPU. Switching the multiplexer to the dedicated GPU or using an external monitor would thus offer better performance than using the built-in monitor or offloading the rendering to the dedicated GPU. Update your system before proceeding to the next steps: sudo zypper dup","title":"Enabling Hybrid Graphics"},{"location":"hybrid_graphics/#dedicated-nvidia-gpu","text":"To use an external monitor or be able to offload rendering to the NVIDIA GPU, you'll need to follow the next steps. The external monitor will work when you switch to the NVIDIA GPU. This section applies to users interested in the proprietary NVIDIA driver.","title":"Dedicated NVIDIA GPU"},{"location":"hybrid_graphics/#getting-the-necessary-software","text":"Install the correct Nvidia driver . Install the suse-prime package using zypper or YaST. If you want to install via zypper run the following command in a terminal session: sudo zypper in suse-prime . Users on NVIDIA graphic cards released before GeForce 600 series should instead install suse-prime-bbswitch . Info In case you are using KDE, a widget called SUSE Prime Selector can be added as graphical way to switch graphics. You can install it with the command sudo zypper in plasma5-applet-suse-prime . See the next sections according to your integrated and dedicated GPU combination. Alternatively, to offload rendering to the dedicated GPU (NVIDIA Optimus), see Offloading specific applications to the NVIDIA GPU . This allows you to use both graphical units simultaneously.","title":"Getting the necessary software"},{"location":"hybrid_graphics/#intel-and-nvidia","text":"Either one of these two options: * From a terminal session: to switch to the NVIDIA GPU run sudo prime-select nvidia ; conversely, for the Intel GPU run sudo prime-select intel . After executing either command, log out and back on to apply the changes. * With the KDE widget SUSE Prime Selector , just click it and select Switch to NVidia . Then log out and back in and you should be set.","title":"Intel and NVIDIA"},{"location":"hybrid_graphics/#amd-apu-and-nvidia","text":"When using XOrg 1.20.6 or higher: to make the APU the primary GPU and have the ability to offload specific applications to the dedicated GPU, you can skip to the offloading section below. If you are using an older release of XOrg, such as the case for Leap 15.2, or you wish to exclusively use the NVIDIA card, pick between the following steps: To enable only the NVIDIA GPU, run sudo prime-select nvidia from the command line. To enable the AMD GPU, run sudo prime-select unset . After executing either command, log out and back on to apply the changes.","title":"AMD APU and NVIDIA"},{"location":"hybrid_graphics/#offloading-specific-applications-to-the-nvidia-gpu","text":"Warning This section only applies to users with the propietary driver and NVIDIA GeForce 600 series or higher. With the integrated Intel GPU or AMD APU set as your main GPU, you can also offload specific applications using an envoronment variable. For example, to run supertuxkart using the the NVIDIA driver, you can launch it from a terminal session as follows: __NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia __VK_LAYER_NV_optimus=NVIDIA_only supertuxkart To offload a game from Steam using the NVIDIA driver, you can modify properties of the game, by right clicking it, going to Properties choosing Set Launch Options and adding a line like this: __NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia __VK_LAYER_NV_optimus=NVIDIA_only %command% For the offload process to work properly on integrated Intel cards, make sure the file /etc/X11/xorg.conf.d/90-intel.conf exists. If you do not have it, enable the NVIDIA card once and switch back to the integrated GPU; the required file will be created automatically along the way. Note that this only applies to XOrg sessions. If everything worked out fine for you, feel free to copy and modify the .desktop files of your more demanding programs (like MATLAB or Octave) and append the enviroment variables to the Exec section of the file: Exec=__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia __VK_LAYER_NV_optimus=NVIDIA_only /usr/bin/octave --gui %f This makes the desired program offload to the dedicated GPU everytime you launch it from the shortcut.","title":"Offloading specific applications to the Nvidia GPU"},{"location":"hybrid_graphics/#dedicated-amd-gpu-or-nouveau","text":"To offload anything to the AMD GPU, simply use the special enviroment variable to launch the desired program, as per the following example: DRI_PRIME=1 supertuxkart The same applies to users with the open source nouveau driver for NVIDIA cards.","title":"Dedicated AMD GPU or nouveau"},{"location":"image_choice/","text":"Choosing an installation media \u2693\ufe0e The installers and images can be obtained on the Tumbleweed and Leap pages. Most users are used to Live images, packing a full-blown environment where they can test out a Linux distribution before installing. Note Users interested in Tumbleweed should bear in mind that, because of the way Tumbleweed is built, Tumbleweed Live images are missing a handful of tests in comparison to Tumbleweed DVD images (see below). So even if Live images can be considered reasonably safe for most users, we cannot guarantee the same quality assurance as for DVD images. Our live images (~950 MBs) provide the following desktop environments: KDE GNOME XFCE They each come in different flavours tailor-suited to your CPU architecture: x86_64 (64-bit) i686 (32-bit) aarch64 (Armv8-A \"ARM\" 64-bit) The two other installation media we provide are DVD images and Network installer. DVD images are quite bulky (~4.5 GBs), but allow you to install an entire distribution without relying on network for retrieving components. Networks installers are much lighter (~150 MBs); they require a stable and hopefully fast connection to fetch components over the network. Authenticity & integrity checks \u2693\ufe0e Note The following two steps are optional, but are considered good practice. You perform an integrity check when you want to make sure that a given file has not been tampered with. It typically involves making sure that a file's checksum matches a certain target. You perform an authenticity check when you want to make sure that a file -- typically the file that specifies the checksum target -- was obtained from a legitimate source (i.e. openSUSE). Because performing an integrity check against an inauthentic target does not make sense, you want to first do an authenticity check, and only then do an integrity check. Assumptions & definitions \u2693\ufe0e In what follows we make the following assumptions: You have downloaded an openSUSE Live, Network or DVD image from openSUSE website (hereafter: the Image ): Tumbleweed Leap You have obtained the Target Checksum file for your image, by clicking on the Checksum next to the image. You have obtained openSUSE gpg Public Key by importing it via its keyid into your gpg keyring with $ gpg --recv-keys 0x22C07BA534178CD02EFE22AAB88B2FD43DBDC284 You have obtained an openSUSE gpg Detached Signature file corresponding to the image you want to perform the check upon. The Tumbleweed detached signature files are held within a single directory here . Regarding Leap however you need to start there and use the /live subdirectory for the live images and the rescue images (the /iso subdirectory does not provide any detached signature for net installers and DVD images). Once you have the address of the signature file, the command looks like this (i.e. for KDE Live): $ wget http://download.opensuse.org/tumbleweed/iso/openSUSE-Tumbleweed-KDE-Live-x86_64-Current.iso.sha256.asc Authenticity check \u2693\ufe0e For Tumbleweed (all images) and Leap (only live images) the authenticity check is an instance of the command: $ gpg --verify <Detached Signature.asc> <Target Checksum.iso.sha256> For Leap non-live images (typically DVD images) the authenticity check uses no signature (clearsign check); it is an instance of the command: $ gpg --verify <Target Checksum.iso.sha256> The check passes just in case the command outputs calls it a success. Warning If the check fails, make sure you are honoring our assumptions . Integrity check \u2693\ufe0e It is an instance of the command: $ sha256sum <Image.iso> The check passes just in case the output of the above equals the checksum written in plain text in the Target Checksum (see Definitions & assumptions ). Get to the installer \u2693\ufe0e In this section you will learn how to get to a running installer for Tumbleweed or Leap . This involves: Using a program to write an installation image -- see Choosing an installation image above -- to an external device, usually a USB pen drive or some other external storage medium. Having the media adequately partioned to host the image, and making it bootable Booting on the external media and run the installer. We will assume that you have downloaded an installation image and optionally, have performed an authenticity check on it -- see the above sections for details. The next section also assumes that you will be using a USB flash drive as the installation media. The section after that handles external hard drives. Prepare the installation media (USB flash drive) \u2693\ufe0e The process for preparing the installation media varies depending on the operating system from which you are following these steps. Different operating systems offer different applications. We recommend using any of the following programs, which we have tested and which are known to be simple to use and reliable on their respective platforms: - Fedora Image Writer ( Windows , Linux [ flatpak ], macOS ) For Fedora Image Writer : Make sure your USB flash drive has enough storage to hold the image (either ~1 GB or ~5 GB) and plug it in. Run Fedora Image Writer . From the main menu pick Custom image and then select the .iso image to write to the USB flash drive. Make sure that both the image and flash drive have been correctly selected, as in: Finally click on Write to Disk . Once writing the image is done, you are ready to reboot from the USB drive. Leaving the USB drive plugged in, use the method appropriate to your operating system to restart your computer. Reboot to the device \u2693\ufe0e Windows \u2693\ufe0e Use these instructions to reboot to your BIOS or UEFI. From there you will be able to select the USB flash drive hosting the installation image as boot destination. macOS \u2693\ufe0e Simply hold the alt (option) key immediately after restarting and select the openSUSE bootloader from there.","title":"Preparing the installation media"},{"location":"image_choice/#choosing-an-installation-media","text":"The installers and images can be obtained on the Tumbleweed and Leap pages. Most users are used to Live images, packing a full-blown environment where they can test out a Linux distribution before installing. Note Users interested in Tumbleweed should bear in mind that, because of the way Tumbleweed is built, Tumbleweed Live images are missing a handful of tests in comparison to Tumbleweed DVD images (see below). So even if Live images can be considered reasonably safe for most users, we cannot guarantee the same quality assurance as for DVD images. Our live images (~950 MBs) provide the following desktop environments: KDE GNOME XFCE They each come in different flavours tailor-suited to your CPU architecture: x86_64 (64-bit) i686 (32-bit) aarch64 (Armv8-A \"ARM\" 64-bit) The two other installation media we provide are DVD images and Network installer. DVD images are quite bulky (~4.5 GBs), but allow you to install an entire distribution without relying on network for retrieving components. Networks installers are much lighter (~150 MBs); they require a stable and hopefully fast connection to fetch components over the network.","title":"Choosing an installation media"},{"location":"image_choice/#authenticity-integrity-checks","text":"Note The following two steps are optional, but are considered good practice. You perform an integrity check when you want to make sure that a given file has not been tampered with. It typically involves making sure that a file's checksum matches a certain target. You perform an authenticity check when you want to make sure that a file -- typically the file that specifies the checksum target -- was obtained from a legitimate source (i.e. openSUSE). Because performing an integrity check against an inauthentic target does not make sense, you want to first do an authenticity check, and only then do an integrity check.","title":"Authenticity &amp; integrity checks"},{"location":"image_choice/#assumptions-definitions","text":"In what follows we make the following assumptions: You have downloaded an openSUSE Live, Network or DVD image from openSUSE website (hereafter: the Image ): Tumbleweed Leap You have obtained the Target Checksum file for your image, by clicking on the Checksum next to the image. You have obtained openSUSE gpg Public Key by importing it via its keyid into your gpg keyring with $ gpg --recv-keys 0x22C07BA534178CD02EFE22AAB88B2FD43DBDC284 You have obtained an openSUSE gpg Detached Signature file corresponding to the image you want to perform the check upon. The Tumbleweed detached signature files are held within a single directory here . Regarding Leap however you need to start there and use the /live subdirectory for the live images and the rescue images (the /iso subdirectory does not provide any detached signature for net installers and DVD images). Once you have the address of the signature file, the command looks like this (i.e. for KDE Live): $ wget http://download.opensuse.org/tumbleweed/iso/openSUSE-Tumbleweed-KDE-Live-x86_64-Current.iso.sha256.asc","title":"Assumptions &amp; definitions"},{"location":"image_choice/#authenticity-check","text":"For Tumbleweed (all images) and Leap (only live images) the authenticity check is an instance of the command: $ gpg --verify <Detached Signature.asc> <Target Checksum.iso.sha256> For Leap non-live images (typically DVD images) the authenticity check uses no signature (clearsign check); it is an instance of the command: $ gpg --verify <Target Checksum.iso.sha256> The check passes just in case the command outputs calls it a success. Warning If the check fails, make sure you are honoring our assumptions .","title":"Authenticity check"},{"location":"image_choice/#integrity-check","text":"It is an instance of the command: $ sha256sum <Image.iso> The check passes just in case the output of the above equals the checksum written in plain text in the Target Checksum (see Definitions & assumptions ).","title":"Integrity check"},{"location":"image_choice/#get-to-the-installer","text":"In this section you will learn how to get to a running installer for Tumbleweed or Leap . This involves: Using a program to write an installation image -- see Choosing an installation image above -- to an external device, usually a USB pen drive or some other external storage medium. Having the media adequately partioned to host the image, and making it bootable Booting on the external media and run the installer. We will assume that you have downloaded an installation image and optionally, have performed an authenticity check on it -- see the above sections for details. The next section also assumes that you will be using a USB flash drive as the installation media. The section after that handles external hard drives.","title":"Get to the installer"},{"location":"image_choice/#prepare-the-installation-media-usb-flash-drive","text":"The process for preparing the installation media varies depending on the operating system from which you are following these steps. Different operating systems offer different applications. We recommend using any of the following programs, which we have tested and which are known to be simple to use and reliable on their respective platforms: - Fedora Image Writer ( Windows , Linux [ flatpak ], macOS ) For Fedora Image Writer : Make sure your USB flash drive has enough storage to hold the image (either ~1 GB or ~5 GB) and plug it in. Run Fedora Image Writer . From the main menu pick Custom image and then select the .iso image to write to the USB flash drive. Make sure that both the image and flash drive have been correctly selected, as in: Finally click on Write to Disk . Once writing the image is done, you are ready to reboot from the USB drive. Leaving the USB drive plugged in, use the method appropriate to your operating system to restart your computer.","title":"Prepare the installation media (USB flash drive)"},{"location":"image_choice/#reboot-to-the-device","text":"","title":"Reboot to the device"},{"location":"image_choice/#windows","text":"Use these instructions to reboot to your BIOS or UEFI. From there you will be able to select the USB flash drive hosting the installation image as boot destination.","title":"Windows"},{"location":"image_choice/#macos","text":"Simply hold the alt (option) key immediately after restarting and select the openSUSE bootloader from there.","title":"macOS"},{"location":"install_proprietary/","text":"Nvidia proprietary drivers \u2693\ufe0e Determine which driver is required by your GPU \u2693\ufe0e There are two Nvidia driver options available in the Nvidia repository - nvidia-glG05 and nvidia-glG04 . The nvidia-glG05 package corresponds with the Nvidia 460 series driver. The nvidia-glG04 package corresponds with the Nvidia 390 series driver. Please refer to the Nvidia website to determine which driver best supports your GPU. Setup the driver \u2693\ufe0e With Yast \u2693\ufe0e Go to YAsT2 . Then Software Management . On the menu, click Configuration > Repositories ... (or do Ctrl + R ). Click Add > Community Repositories . Select nVidia Graphics Drivers > Accept > Trust . On the Configured Software Repositories > Click Ok Back to Software Management Windows \" > View > Repositories > Select nVidia Graphics Drivers . Select x11-video-nvidiaG05 > Accept (Some graphic cards need G04 , see the first section above) Reboot. Using the command line \u2693\ufe0e Add the Nvidia Repository. If using Tumbleweed for example, you would run sudo zypper addrepo --refresh https://download.nvidia.com/opensuse/tumbleweed NVIDIA . For Leap, you can run sudo zypper addrepo --refresh 'https://download.nvidia.com/opensuse/leap/$releasever' NVIDIA . Install the appropriate driver by running sudo zypper in x11-video-nvidiaG05 or sudo zypper in x11-video-nvidiaG04 Reboot. CUDA \u2693\ufe0e CUDA can be installed with the Nvidia-ComputeG05 or Nvidia-ComputeG04 package. See Nvidia's documentation for further information. Hybrid Graphics/Optimus \u2693\ufe0e See Hybrid Graphics","title":"Proprietary"},{"location":"install_proprietary/#nvidia-proprietary-drivers","text":"","title":"Nvidia proprietary drivers"},{"location":"install_proprietary/#determine-which-driver-is-required-by-your-gpu","text":"There are two Nvidia driver options available in the Nvidia repository - nvidia-glG05 and nvidia-glG04 . The nvidia-glG05 package corresponds with the Nvidia 460 series driver. The nvidia-glG04 package corresponds with the Nvidia 390 series driver. Please refer to the Nvidia website to determine which driver best supports your GPU.","title":"Determine which driver is required by your GPU"},{"location":"install_proprietary/#setup-the-driver","text":"","title":"Setup the driver"},{"location":"install_proprietary/#with-yast","text":"Go to YAsT2 . Then Software Management . On the menu, click Configuration > Repositories ... (or do Ctrl + R ). Click Add > Community Repositories . Select nVidia Graphics Drivers > Accept > Trust . On the Configured Software Repositories > Click Ok Back to Software Management Windows \" > View > Repositories > Select nVidia Graphics Drivers . Select x11-video-nvidiaG05 > Accept (Some graphic cards need G04 , see the first section above) Reboot.","title":"With Yast"},{"location":"install_proprietary/#using-the-command-line","text":"Add the Nvidia Repository. If using Tumbleweed for example, you would run sudo zypper addrepo --refresh https://download.nvidia.com/opensuse/tumbleweed NVIDIA . For Leap, you can run sudo zypper addrepo --refresh 'https://download.nvidia.com/opensuse/leap/$releasever' NVIDIA . Install the appropriate driver by running sudo zypper in x11-video-nvidiaG05 or sudo zypper in x11-video-nvidiaG04 Reboot.","title":"Using the command line"},{"location":"install_proprietary/#cuda","text":"CUDA can be installed with the Nvidia-ComputeG05 or Nvidia-ComputeG04 package. See Nvidia's documentation for further information.","title":"CUDA"},{"location":"install_proprietary/#hybrid-graphicsoptimus","text":"See Hybrid Graphics","title":"Hybrid Graphics/Optimus"},{"location":"kde/","text":"KDE \u2693\ufe0e KDE is an international technology team that creates free and open source software for desktop and portable computing. Plasma, made by KDE is the default graphical desktop environment of openSUSE. The latest version, Plasma 5, is a fresh, elegant and powerful desktop for both beginner and advanced users. KDE software is not limited to a desktop environment. The software made by the community includes: * Plasma, the graphical desktop. * KDE Applications, a collection of a wide variety of applications for communication, work, education and entertainment, including famous programs like Kate. * Additional high-quality applications, such as DigiKam and Krita. * KDE Frameworks, a series of modules to easily build new applications upon. What makes KDE software on openSUSE special: * It has a team of dedicated engineers who spend much of their time fixing bugs so you can rely on KDE. * It has a large, active and highly experienced community team around it who bring multiple points of view and different interests to the project so that KDE software on openSUSE meets many users' needs. * Through its innovation it stimulates the openSUSE distribution to develop, evolve and progress. X11, XWayland & Wayland sessions \u2693\ufe0e Settings & Keybindings \u2693\ufe0e KDE settings can be customized through the System Settings application found in Application Launcher --> Settings --> System Settings . A convenient shortcut for System Settings can be found on the system panel as well. KDE is extremely customizabl,to find more specific help visit the Plasma Wiki Keybindings or keyboard shortcuts are an efficient way to interact with KDE without having to use the mouse. In System Settings click Shortcuts under the \"Workspace\" category. You will be able to find any pre-existing shortcuts for many KDE applications as well as create your own shortcuts for any applications you install yourself. The Custom Shortcuts menu allows you to create shortcuts for almost any system task. The Shortcuts window has three main areas. The shortcut categories, Shortcuts and Custom Shortcuts . List of applications or custom shortcuts. Shortcut editing area. Many KDE applications are already in the list. If you want to add additional applications simply click Add Application and make a selection from the list. Click OK to confirm the selection. Once this step is done, the new application will be displayed in the Applications column. Changing Keyboard Shortcuts \u2693\ufe0e Select the application you want to change the shortcut for from the Applications column. The list of shortcut actions will be displayed in the editing area on the right. Click on any shortcut action to expand its settings (if there is only one shortcut available it will be automatically expanded). Shortcut actions can have default and custom keyboard shortcuts. You can disable the default by un-marking the box next to it or leave it active alongside any custom shortcuts you choose. Click Add custom shortcut , the button will change to indicate it is waiting for the next key combination, whatever keys are pressed next will be recorded as the custom shortcut. Click the \"cancel\" button, which has now appeared, if you change your mind. When a custom shortcut is recorded, you have the option to delete it by clicking the \"trash\" icon or additional custom shortcuts can be added. Once you are satisfied with the changes, click Apply in the bottom right corner of the shortcuts window. Using panes, bars, widgets & docks \u2693\ufe0e Learning more \u2693\ufe0e","title":"KDE Plasma basics"},{"location":"kde/#kde","text":"KDE is an international technology team that creates free and open source software for desktop and portable computing. Plasma, made by KDE is the default graphical desktop environment of openSUSE. The latest version, Plasma 5, is a fresh, elegant and powerful desktop for both beginner and advanced users. KDE software is not limited to a desktop environment. The software made by the community includes: * Plasma, the graphical desktop. * KDE Applications, a collection of a wide variety of applications for communication, work, education and entertainment, including famous programs like Kate. * Additional high-quality applications, such as DigiKam and Krita. * KDE Frameworks, a series of modules to easily build new applications upon. What makes KDE software on openSUSE special: * It has a team of dedicated engineers who spend much of their time fixing bugs so you can rely on KDE. * It has a large, active and highly experienced community team around it who bring multiple points of view and different interests to the project so that KDE software on openSUSE meets many users' needs. * Through its innovation it stimulates the openSUSE distribution to develop, evolve and progress.","title":"KDE"},{"location":"kde/#x11-xwayland-wayland-sessions","text":"","title":"X11, XWayland &amp; Wayland sessions"},{"location":"kde/#settings-keybindings","text":"KDE settings can be customized through the System Settings application found in Application Launcher --> Settings --> System Settings . A convenient shortcut for System Settings can be found on the system panel as well. KDE is extremely customizabl,to find more specific help visit the Plasma Wiki Keybindings or keyboard shortcuts are an efficient way to interact with KDE without having to use the mouse. In System Settings click Shortcuts under the \"Workspace\" category. You will be able to find any pre-existing shortcuts for many KDE applications as well as create your own shortcuts for any applications you install yourself. The Custom Shortcuts menu allows you to create shortcuts for almost any system task. The Shortcuts window has three main areas. The shortcut categories, Shortcuts and Custom Shortcuts . List of applications or custom shortcuts. Shortcut editing area. Many KDE applications are already in the list. If you want to add additional applications simply click Add Application and make a selection from the list. Click OK to confirm the selection. Once this step is done, the new application will be displayed in the Applications column.","title":"Settings &amp; Keybindings"},{"location":"kde/#changing-keyboard-shortcuts","text":"Select the application you want to change the shortcut for from the Applications column. The list of shortcut actions will be displayed in the editing area on the right. Click on any shortcut action to expand its settings (if there is only one shortcut available it will be automatically expanded). Shortcut actions can have default and custom keyboard shortcuts. You can disable the default by un-marking the box next to it or leave it active alongside any custom shortcuts you choose. Click Add custom shortcut , the button will change to indicate it is waiting for the next key combination, whatever keys are pressed next will be recorded as the custom shortcut. Click the \"cancel\" button, which has now appeared, if you change your mind. When a custom shortcut is recorded, you have the option to delete it by clicking the \"trash\" icon or additional custom shortcuts can be added. Once you are satisfied with the changes, click Apply in the bottom right corner of the shortcuts window.","title":"Changing Keyboard Shortcuts"},{"location":"kde/#using-panes-bars-widgets-docks","text":"","title":"Using panes, bars, widgets &amp; docks"},{"location":"kde/#learning-more","text":"","title":"Learning more"},{"location":"markdown/","text":"Markdown example \u2693\ufe0e Note This page is temporary for onboarding and will be removed in doc releases. Admonitions Blocks \u2693\ufe0e Examples of supported admonitions blocks I enabled in the theme and mkdocs. All blocks can be made collapsable like the second example. Blocks icons and styling can be modified and new ones can be added Note Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Note Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Seealso Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Todo Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Done Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Fail Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","title":"Markdown flavour"},{"location":"markdown/#markdown-example","text":"Note This page is temporary for onboarding and will be removed in doc releases.","title":"Markdown example"},{"location":"markdown/#admonitions-blocks","text":"Examples of supported admonitions blocks I enabled in the theme and mkdocs. All blocks can be made collapsable like the second example. Blocks icons and styling can be modified and new ones can be added Note Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Note Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Seealso Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Todo Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Done Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Fail Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","title":"Admonitions Blocks"},{"location":"microos_getting_started/","text":"Setting up MicroOS as a desktop OS \u2693\ufe0e Audience and context \u2693\ufe0e This document is meant for users interested in using the openSUSE MicroOS as a desktop. Although this operating system is offered in two flavours (one based on Leap, the other on Tumbleweed), we will only be concerned with the Tumbleweed base, as the Leap base does not provide the required patterns for desktop usage. Pre-installation \u2693\ufe0e Download the Tumbleweed base ISO image from https://en.opensuse.org/Portal:MicroOS/Downloads Write the ISO on a USB drive and start the installation process. Select GNOME or KDE Plasma as desktop environment. If desired, select encryption . In what follows: commands starting with $ can be copied straight into your terminal prompt. commands starting with # can only be run inside a transactional-update shell. Info A transactional-update shell is a chroot where you can open the snapshot you want to boot into next. In that context you can make adjustments to the normally immutable root filesystem. It is meant mostly for advanced users, so mind your keystrokes. Ways to install applications \u2693\ufe0e You can install applications in several ways: flatpaks from flathub -- the preferred solution RPM's via sudo transactional-update pkg install package_name RPM's in a toolbox toolbox -u snaps (requires some extra setup to get snapd installed) AppImages Info The reason flatpaks are preferred is that they provide a self-contained environment offering a pleasant balance between security, dependence integrity and performance. See here for details. Full drive encryption \u2693\ufe0e If you need full drive encryption you can go through the ISO installer as normal, except for the last screen, where you need to click on Partitioning . Then use the guided partitioner to enable encryption. LVM is not necessary for it to work. Bear in mind however that with full drive encryption, you will need to enter your password twice: 1. the first time to open the grub menu 2. the second time to decrypt during boot. Alternatively, the second decrypt can be performed automatically; instructions are provided at manual . Setting up a key file \u2693\ufe0e The steps below describe how to set up a key file. You will need to execute the commands and edit the files listed below in a transactional-update shell. $ sudo transactional-update shell # touch /.root.key # chmod 600 /.root.key # dd if=/dev/urandom of=/.root.key bs=1024 count=1 # cryptsetup luksAddKey /dev/sda1 /.root.key Replace /dev/sda1 with the root partition ( sudo fdisk -l to see partitions) # vim /etc/crypttab Edit /etc/crypttab , find the line starting with the UUID reference of the root partition ( UUID=... ) and write the path to the key file in the third column. cr_sda1 UUID=... /.root.key (The partition name is just an example.)S Configure dracut to add the key file to the initrd: # echo -e 'install_items+=\" /.root.key \"' | tee --append /etc/dracut.conf.d/99-root-key.conf > /dev/null # mkinitrd # exit $ sudo reboot Installation: GNOME \u2693\ufe0e Make sure to install a browser via transactional-updates if you want to use GNOME extensions. The easiest way to install GNOME extensions is via the website provided by the GNOME project . For this to work however, you will need a browser installed on the system via transactional-update, as it will not work inside a containerized environment (like flatpaks, snaps, AppImages or in a toolbox). The browser will need to have the plugin mentioned on the top of the page when you first open it. After installation of the plugin, you can reload the page and choose the GNOME Extensions you want to install. To get GNOME extensions running, you need the following command to install Chromium directly: $ sudo transactional-update pkg install chromium $ sudo reboot You can also install some other useful packages through transactional-update and then reboot: $ sudo transactional-update pkg install gnome-remote-desktop gnome-shell-search-provider-nautilus gnome-color-manager $ sudo reboot Some necessary commands for GNOME Software : $ gsettings set org.gnome.software install-bundles-system-wide false $ gsettings set org.gnome.software allow-updates false $ gsettings set org.gnome.software download-updates false $ gsettings set org.gnome.software enable-repos-dialog false $ gsettings set org.gnome.software first-run true and the following: $ sudo rm -Rf /var/cache/app-info $ sudo transactional-update shell # rpm -e --nodeps libzypp-plugin-appdata # zypper al libzypp-plugin-appdata # exit $ sudo reboot Installation: KDE \u2693\ufe0e In Discover , enable the flatpak repository. For theming, normal theme installations don\u2019t work in KDE Plasma. But you can install themes via a transactional-update shell: (For example the Arc theme and papirus-icon-theme) $ sudo transactional-update shell # cd /tmp # wget -qO- https://raw.githubusercontent.com/PapirusDevelopmentTeam/arc-kde/master/install.sh | sh # wget -qO- https://git.io/papirus-icon-theme-install | sh # exit $ sudo reboot Other themes (also for GNOME): Qogir-icon-theme Matcha-gtk Matcha-KDE Akwa-gtk General tips \u2693\ufe0e It is recommended to disable both automatic updating and automatic rebooting. They are handy features for servers running 24/7), but the developers are thinking about a different and better integration with desktop usage. For now it is recommended to do the same, at least until you have become more familiar with MicroOS. Then you will be able to come up with the best automatic updating & rebooting strategy for your workflow and use case. So: $ sudo systemctl disable --now transactional-update.timer $ sudo systemctl disable --now rebootmgr.service And then let\u2019s check: $ sudo rebootmgrctl is-active *RebootMgr is dead* $ sudo rebootmgrctl status *Error: The name org.opensuse.RebootMgr was not provided by any .service files* Updates are now to be initialized manually with: $ sudo transactional-update dup $ sudo reboot Or $ sudo transactional-update shell # zypper dup # exit $ sudo reboot Installing flatpaks \u2693\ufe0e The flatpak package is already installed; all that needs to be done is to add the flathub repo. Within KDE Plasma this is possible from within Discover . For GNOME you have to use one of the two options below (also possible for a terminal prompt if you don't like Discover): If you want to install flathub for only your user (in /home/~ folder ): $ flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo Updating flatpaks via the terminal are done with the command flatpak update If you want to install flathub for all users (in /var folder ): $ flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo Updating flatpaks via the terminal are done with the command sudo flatpak update Some flatpaks you could install from flathub : - Firefox - Libreoffice - VLC - etc. Installing snaps \u2693\ufe0e Snaps are mainly used with Ubuntu, but it is possible to install them as well in openSUSE MicroOS with the following commands. Info It is NOT recommended to install snaps on openSUSE MicroOS, there is a possibility this will break during an update or reboot $ sudo transactional-update shell # zypper addrepo --refresh https://download.opensuse.org/repositories/system:/snappy/openSUSE_Tumbleweed snappy # zypper --gpg-auto-import-keys refresh # zypper ref # zypper dup --from snappy # zypper in snapd # exit $ sudo reboot $ sudo mksubvolume /snap $ source /etc/profile $ sudo systemctl enable --now snapd $ sudo systemctl enable --now snapd.apparmor You can install snaps via the terminal (for example the snap store where you can find snaps and install them via a graphical interface): $ sudo snap install snap-store Installing virtualbox \u2693\ufe0e $ sudo transactional-update shell # zypper ref # zypper in virtualbox-qt # usermod -a -G vboxusers <myuser> # exit $ sudo reboot Adding the extension pack for the host \u2693\ufe0e Installation can be done after you've rebooted into a new snapshot where virtualbox-qt is installed $ sudo transactional-update shell # cd /tmp # LatestVirtualBoxVersion=$(wget -qO - https://download.virtualbox.org/virtualbox/LATEST-STABLE.TXT) && wget \"https://download.virtualbox.org/virtualbox/${LatestVirtualBoxVersion}/Oracle_VM_VirtualBox_Extension_Pack-${LatestVirtualBoxVersion}.vbox-extpack\" # VBoxManage extpack install --replace Oracle_VM_VirtualBox_Extension_Pack-${LatestVirtualBoxVersion}.vbox-extpack # exit $ sudo reboot Adding software from OBS \u2693\ufe0e Find what you need on https://software.opensuse.org . Then choose the openSUSE Tumbleweed repository, as MicroOS desktop is built from the same base as Tumbleweed. Everything that runs on Tumbleweed should in theory run reliably on MicroOS Desktop. You can't use the 1-click install as there is no YaST and the 1-click installer has no access to a transactional-update. So for example if you install zerotier : 1. Pick a TumbleWeed repository. 2. Click on Expert Download . 3. Choose the option Add repository and install manually . 4. Copy the commands into a transactional-update shell $ sudo transactional-update shell # zypper addrepo https://download.opensuse.org/repositories/home:alphard:RHEL/openSUSE_Tumbleweed/home:alphard:RHEL.repo # zypper ref # zypper in zerotier-one # exit $ sudo reboot If you have added repositories to zypper by yourself, it is possible that they will not refresh automatically with a dup command. You wll have to give them a flag for autorefresh: $ sudo transactional-update shell # zypper lr -p # zypper mr -f <number of repo you want to add Yes to in the Refresh colomn> # exit $ sudo reboot Tips if you're installing on laptop \u2693\ufe0e Two important packages were found missing for some users: tlp for better battery management ModemManager for laptops with a WWAN modem You can install both with: $ sudo transactional-update pkg install tlp ModemManager $ sudo reboot Some useful aliases for bash to type the commands faster \u2693\ufe0e Edit the file ~/.bashrc And add the following lines in the file at the end: #My custom aliases alias shalt=\"sudo systemctl halt\" alias sboot=\"sudo systemctl reboot\" alias sts=\"sudo transactional-update shell\" alias stsc=\"sudo transactional-update shell --continue\" alias stdc=\"sudo transactional-update dup --continue\" alias std=\"sudo transactional-update dup\" alias sfu=\"sudo flatpak update && flatpak update\" alias fsu=\"sudo flatpak update && flatpak update && sudo snap refresh\" alias dfs=\"sudo transactional-update dup && sudo flatpak update && flatpak update && sudo snap refresh\" Then for example typing std in a terminal prompt will issue the command sudo transactional-update dup . Known Issues \u2693\ufe0e No graphical session/login screen in Hyper-V \u2693\ufe0e Hyper-V requires the package xf86-video-fbdev for graphical session: $ sudo transactional-update pkg install xf86-video-fbdev $ sudo reboot Toolbox is not starting (\"potentially insufficient UIDs and GIDs\") \u2693\ufe0e UUI and GUI need to be set for toolbox to work: $ sudo transactional-update shell # echo \"<yourusername>:100000:65536\" > /etc/subuid # echo \"<yourusername>:100000:65536\" > /etc/subgid # exit $ sudo reboot Graphical applications in the toolbox are missing fonts/icons \u2693\ufe0e They need to be installed inside the toolbox: sudo zypper install xorg-x11-fonts-core adwaita-icon-theme Alternative for Gnome Extensions \u2693\ufe0e There is an alternative to installing GNOME Extensions, such that no RPM installed browser is necessary. It's currently under development at Github . You can install it via toolbox ; the commands are as follows: $ toolbox -u $ sudo zypper in git python38-pip $ cd /tmp $ git clone https://github.com/ekistece/GetExtensions.git $ pip3 install ./GetExtensions --user $ exit You can then open the application Get Extensions that is available from your launchpad. To uninstall: pip3 uninstall getextensions","title":"microOS specials"},{"location":"microos_getting_started/#setting-up-microos-as-a-desktop-os","text":"","title":"Setting up MicroOS as a desktop OS"},{"location":"microos_getting_started/#audience-and-context","text":"This document is meant for users interested in using the openSUSE MicroOS as a desktop. Although this operating system is offered in two flavours (one based on Leap, the other on Tumbleweed), we will only be concerned with the Tumbleweed base, as the Leap base does not provide the required patterns for desktop usage.","title":"Audience and context"},{"location":"microos_getting_started/#pre-installation","text":"Download the Tumbleweed base ISO image from https://en.opensuse.org/Portal:MicroOS/Downloads Write the ISO on a USB drive and start the installation process. Select GNOME or KDE Plasma as desktop environment. If desired, select encryption . In what follows: commands starting with $ can be copied straight into your terminal prompt. commands starting with # can only be run inside a transactional-update shell. Info A transactional-update shell is a chroot where you can open the snapshot you want to boot into next. In that context you can make adjustments to the normally immutable root filesystem. It is meant mostly for advanced users, so mind your keystrokes.","title":"Pre-installation"},{"location":"microos_getting_started/#ways-to-install-applications","text":"You can install applications in several ways: flatpaks from flathub -- the preferred solution RPM's via sudo transactional-update pkg install package_name RPM's in a toolbox toolbox -u snaps (requires some extra setup to get snapd installed) AppImages Info The reason flatpaks are preferred is that they provide a self-contained environment offering a pleasant balance between security, dependence integrity and performance. See here for details.","title":"Ways to install applications"},{"location":"microos_getting_started/#full-drive-encryption","text":"If you need full drive encryption you can go through the ISO installer as normal, except for the last screen, where you need to click on Partitioning . Then use the guided partitioner to enable encryption. LVM is not necessary for it to work. Bear in mind however that with full drive encryption, you will need to enter your password twice: 1. the first time to open the grub menu 2. the second time to decrypt during boot. Alternatively, the second decrypt can be performed automatically; instructions are provided at manual .","title":"Full drive encryption"},{"location":"microos_getting_started/#setting-up-a-key-file","text":"The steps below describe how to set up a key file. You will need to execute the commands and edit the files listed below in a transactional-update shell. $ sudo transactional-update shell # touch /.root.key # chmod 600 /.root.key # dd if=/dev/urandom of=/.root.key bs=1024 count=1 # cryptsetup luksAddKey /dev/sda1 /.root.key Replace /dev/sda1 with the root partition ( sudo fdisk -l to see partitions) # vim /etc/crypttab Edit /etc/crypttab , find the line starting with the UUID reference of the root partition ( UUID=... ) and write the path to the key file in the third column. cr_sda1 UUID=... /.root.key (The partition name is just an example.)S Configure dracut to add the key file to the initrd: # echo -e 'install_items+=\" /.root.key \"' | tee --append /etc/dracut.conf.d/99-root-key.conf > /dev/null # mkinitrd # exit $ sudo reboot","title":"Setting up a key file"},{"location":"microos_getting_started/#installation-gnome","text":"Make sure to install a browser via transactional-updates if you want to use GNOME extensions. The easiest way to install GNOME extensions is via the website provided by the GNOME project . For this to work however, you will need a browser installed on the system via transactional-update, as it will not work inside a containerized environment (like flatpaks, snaps, AppImages or in a toolbox). The browser will need to have the plugin mentioned on the top of the page when you first open it. After installation of the plugin, you can reload the page and choose the GNOME Extensions you want to install. To get GNOME extensions running, you need the following command to install Chromium directly: $ sudo transactional-update pkg install chromium $ sudo reboot You can also install some other useful packages through transactional-update and then reboot: $ sudo transactional-update pkg install gnome-remote-desktop gnome-shell-search-provider-nautilus gnome-color-manager $ sudo reboot Some necessary commands for GNOME Software : $ gsettings set org.gnome.software install-bundles-system-wide false $ gsettings set org.gnome.software allow-updates false $ gsettings set org.gnome.software download-updates false $ gsettings set org.gnome.software enable-repos-dialog false $ gsettings set org.gnome.software first-run true and the following: $ sudo rm -Rf /var/cache/app-info $ sudo transactional-update shell # rpm -e --nodeps libzypp-plugin-appdata # zypper al libzypp-plugin-appdata # exit $ sudo reboot","title":"Installation: GNOME"},{"location":"microos_getting_started/#installation-kde","text":"In Discover , enable the flatpak repository. For theming, normal theme installations don\u2019t work in KDE Plasma. But you can install themes via a transactional-update shell: (For example the Arc theme and papirus-icon-theme) $ sudo transactional-update shell # cd /tmp # wget -qO- https://raw.githubusercontent.com/PapirusDevelopmentTeam/arc-kde/master/install.sh | sh # wget -qO- https://git.io/papirus-icon-theme-install | sh # exit $ sudo reboot Other themes (also for GNOME): Qogir-icon-theme Matcha-gtk Matcha-KDE Akwa-gtk","title":"Installation: KDE"},{"location":"microos_getting_started/#general-tips","text":"It is recommended to disable both automatic updating and automatic rebooting. They are handy features for servers running 24/7), but the developers are thinking about a different and better integration with desktop usage. For now it is recommended to do the same, at least until you have become more familiar with MicroOS. Then you will be able to come up with the best automatic updating & rebooting strategy for your workflow and use case. So: $ sudo systemctl disable --now transactional-update.timer $ sudo systemctl disable --now rebootmgr.service And then let\u2019s check: $ sudo rebootmgrctl is-active *RebootMgr is dead* $ sudo rebootmgrctl status *Error: The name org.opensuse.RebootMgr was not provided by any .service files* Updates are now to be initialized manually with: $ sudo transactional-update dup $ sudo reboot Or $ sudo transactional-update shell # zypper dup # exit $ sudo reboot","title":"General tips"},{"location":"microos_getting_started/#installing-flatpaks","text":"The flatpak package is already installed; all that needs to be done is to add the flathub repo. Within KDE Plasma this is possible from within Discover . For GNOME you have to use one of the two options below (also possible for a terminal prompt if you don't like Discover): If you want to install flathub for only your user (in /home/~ folder ): $ flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo Updating flatpaks via the terminal are done with the command flatpak update If you want to install flathub for all users (in /var folder ): $ flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo Updating flatpaks via the terminal are done with the command sudo flatpak update Some flatpaks you could install from flathub : - Firefox - Libreoffice - VLC - etc.","title":"Installing flatpaks"},{"location":"microos_getting_started/#installing-snaps","text":"Snaps are mainly used with Ubuntu, but it is possible to install them as well in openSUSE MicroOS with the following commands. Info It is NOT recommended to install snaps on openSUSE MicroOS, there is a possibility this will break during an update or reboot $ sudo transactional-update shell # zypper addrepo --refresh https://download.opensuse.org/repositories/system:/snappy/openSUSE_Tumbleweed snappy # zypper --gpg-auto-import-keys refresh # zypper ref # zypper dup --from snappy # zypper in snapd # exit $ sudo reboot $ sudo mksubvolume /snap $ source /etc/profile $ sudo systemctl enable --now snapd $ sudo systemctl enable --now snapd.apparmor You can install snaps via the terminal (for example the snap store where you can find snaps and install them via a graphical interface): $ sudo snap install snap-store","title":"Installing snaps"},{"location":"microos_getting_started/#installing-virtualbox","text":"$ sudo transactional-update shell # zypper ref # zypper in virtualbox-qt # usermod -a -G vboxusers <myuser> # exit $ sudo reboot","title":"Installing virtualbox"},{"location":"microos_getting_started/#adding-the-extension-pack-for-the-host","text":"Installation can be done after you've rebooted into a new snapshot where virtualbox-qt is installed $ sudo transactional-update shell # cd /tmp # LatestVirtualBoxVersion=$(wget -qO - https://download.virtualbox.org/virtualbox/LATEST-STABLE.TXT) && wget \"https://download.virtualbox.org/virtualbox/${LatestVirtualBoxVersion}/Oracle_VM_VirtualBox_Extension_Pack-${LatestVirtualBoxVersion}.vbox-extpack\" # VBoxManage extpack install --replace Oracle_VM_VirtualBox_Extension_Pack-${LatestVirtualBoxVersion}.vbox-extpack # exit $ sudo reboot","title":"Adding the extension pack for the host"},{"location":"microos_getting_started/#adding-software-from-obs","text":"Find what you need on https://software.opensuse.org . Then choose the openSUSE Tumbleweed repository, as MicroOS desktop is built from the same base as Tumbleweed. Everything that runs on Tumbleweed should in theory run reliably on MicroOS Desktop. You can't use the 1-click install as there is no YaST and the 1-click installer has no access to a transactional-update. So for example if you install zerotier : 1. Pick a TumbleWeed repository. 2. Click on Expert Download . 3. Choose the option Add repository and install manually . 4. Copy the commands into a transactional-update shell $ sudo transactional-update shell # zypper addrepo https://download.opensuse.org/repositories/home:alphard:RHEL/openSUSE_Tumbleweed/home:alphard:RHEL.repo # zypper ref # zypper in zerotier-one # exit $ sudo reboot If you have added repositories to zypper by yourself, it is possible that they will not refresh automatically with a dup command. You wll have to give them a flag for autorefresh: $ sudo transactional-update shell # zypper lr -p # zypper mr -f <number of repo you want to add Yes to in the Refresh colomn> # exit $ sudo reboot","title":"Adding software from OBS"},{"location":"microos_getting_started/#tips-if-youre-installing-on-laptop","text":"Two important packages were found missing for some users: tlp for better battery management ModemManager for laptops with a WWAN modem You can install both with: $ sudo transactional-update pkg install tlp ModemManager $ sudo reboot","title":"Tips if you're installing on laptop"},{"location":"microos_getting_started/#some-useful-aliases-for-bash-to-type-the-commands-faster","text":"Edit the file ~/.bashrc And add the following lines in the file at the end: #My custom aliases alias shalt=\"sudo systemctl halt\" alias sboot=\"sudo systemctl reboot\" alias sts=\"sudo transactional-update shell\" alias stsc=\"sudo transactional-update shell --continue\" alias stdc=\"sudo transactional-update dup --continue\" alias std=\"sudo transactional-update dup\" alias sfu=\"sudo flatpak update && flatpak update\" alias fsu=\"sudo flatpak update && flatpak update && sudo snap refresh\" alias dfs=\"sudo transactional-update dup && sudo flatpak update && flatpak update && sudo snap refresh\" Then for example typing std in a terminal prompt will issue the command sudo transactional-update dup .","title":"Some useful aliases for bash to type the commands faster"},{"location":"microos_getting_started/#known-issues","text":"","title":"Known Issues"},{"location":"microos_getting_started/#no-graphical-sessionlogin-screen-in-hyper-v","text":"Hyper-V requires the package xf86-video-fbdev for graphical session: $ sudo transactional-update pkg install xf86-video-fbdev $ sudo reboot","title":"No graphical session/login screen in Hyper-V"},{"location":"microos_getting_started/#toolbox-is-not-starting-potentially-insufficient-uids-and-gids","text":"UUI and GUI need to be set for toolbox to work: $ sudo transactional-update shell # echo \"<yourusername>:100000:65536\" > /etc/subuid # echo \"<yourusername>:100000:65536\" > /etc/subgid # exit $ sudo reboot","title":"Toolbox is not starting (\"potentially insufficient UIDs and GIDs\")"},{"location":"microos_getting_started/#graphical-applications-in-the-toolbox-are-missing-fontsicons","text":"They need to be installed inside the toolbox: sudo zypper install xorg-x11-fonts-core adwaita-icon-theme","title":"Graphical applications in the toolbox are missing fonts/icons"},{"location":"microos_getting_started/#alternative-for-gnome-extensions","text":"There is an alternative to installing GNOME Extensions, such that no RPM installed browser is necessary. It's currently under development at Github . You can install it via toolbox ; the commands are as follows: $ toolbox -u $ sudo zypper in git python38-pip $ cd /tmp $ git clone https://github.com/ekistece/GetExtensions.git $ pip3 install ./GetExtensions --user $ exit You can then open the application Get Extensions that is available from your launchpad. To uninstall: pip3 uninstall getextensions","title":"Alternative for Gnome Extensions"},{"location":"pick_an_image/","text":"Choosing a distribution \u2693\ufe0e openSUSE distributions \u2693\ufe0e If you are a desktop user, openSUSE offers the choice between two Linux distributions designed to meet your needs: Tumbleweed Leap Tumbleweed \u2693\ufe0e Tumbleweed is a rolling-release distribution: instead of having fixed points where you will be offered to perform a system upgrade (think of Windows, Ubuntu, or macOS, where each numbered version leads to the next), you will be frequently offered to upgrade multiple components of your system. Info Those components are called packages , because they \"pack\" the programs and resources making up most of your system, along with tools to install them). \"Upgrading\" means \"Upgrading packages\" (such as those that constitute your Linux distribution). Even though Tumbleweed uses a rolling-release model, it is very stable: openSUSE thoroughly tests every package before going into an update, ensuring the stability of your system. Moreover you can always revert back to the previous state of Tumbleweed (in jargon: \"switch to the previous snapshot\". Snapshots are explained here ). What you have to bear in mind, however, is that Tumbleweed requires a reliable internet connection and a healthy hard drive to work as designed. It also requires that you sometimes take interest in the updating process. Leap \u2693\ufe0e Leap is a more traditional distribution: it uses a fixed-points release model, just like Windows, Ubuntu, or macOS. Leap is a very battle-hardened operating system, mostly made up of packages brought over from SUSE Linux Enterprise, a commercial Linux operating system for servers, and of packages from Tumbleweed after they were tested, tried and used by the community. It is worth noting that Leap provides a Linux kernel that is several years behind the version offered by Tumbleweed. Info The kernel is the heart of any Linux operating system. It translates your keystrokes and mouse clicks into the ones and zeros the computer understands, and is updated regularly so that the computer can respond to new hardware added to the system.\" . This means that you might be better served by Tumbleweed if you have a recent computer or rely extensively on \"exotic\" hardware. Our recommendation \u2693\ufe0e Pick Tumbleweed if you intend to use your machine as a desktop machine unless: You have a very limited bandwidth or an unreliable access to the Internet. You have an old (7+ years old mechanical hard drive that will struggle with frequent, numerous updates. You cannot afford to reboot your computer frequently to install updates. You don't want to use, or switch between, different snapshots. Your rely on specific versions of important packages, including hardware drivers, and generally speaking you don't want or cannot take advantage of recent packages, including recent kernels. You would rather not do package management manually and more generally, you would rather avoid using the command line. The more conditions apply to your use case, the stronger we recommend you to install Leap instead of Tumbleweed. Info It is not recommended for new users, however, it is possible to use microOS on a desktop computer, taking advantage of transactional updates. This might appeal to advanced users who want to provide friends or relatives with an operating system that will require little to no maintenance. You might be interested in our microOS documentation for more about this use case. Desktop Environments \u2693\ufe0e Leap offers the GNOME and KDE Plasma desktop environments by default. Tumbleweed offers GNOME , KDE Plasma , and XFCE . These options are chosen during the System Role section of the installation. Additional options are available in the Software selection of the installer. These desktop environment patterns may also be viewed and modified with the YaST Software Management module. Modern desktop environments have evolved into highly consistent and productive computing experiences. Choosing the right desktop environment for you can be a deeply personal experience; many people feel as passionately about their desktop environment as they do their distribution. One of the distinguishing options of openSUSE, during the installation, is the ability to choose a desktop environment. This provides a certain level of assurance that you will have a well-supported desktop experience for that desktop environment, no derivatives or spin-offs needed. Installation \u2693\ufe0e During openSUSE Installation , there is a section titled System Role , which applies patterns to the software selected for the respective installation. This is the primary means to select a desktop environment. There is an additional option titled Generic Desktop . If you wish to install a desktop environment available in the installer, but not in the System Role , you can select Generic Desktop and customize the Software selection later within the installer. The descriptions below are as provided by the respective projects. GNOME \u2693\ufe0e GNOME 3 has been designed from the ground up to help you have the best possible computing experience. GNOME 3 provides a focused working environment that helps you to get things done, and it is packed with features that will make you more productive. A powerful search feature lets you access all your work from one place. Side-by-side windows makes it easy to view several documents at the same time, and we even provide a way to turn off notifications when you really need to concentrate on the task in hand. GNOME.org Install Gnome Installer > System Role : Select Desktop with GNOME KDE Plasma \u2693\ufe0e Plasma is made to stay out of the way as it helps you get things done. But under its light and intuitive surface, it's a powerhouse. So you're free to choose ways of usage right as you need them and when you need them. With Plasma the user is king. Not happy with the color scheme? Change it! Want to have your panel on the left edge of the screen? Move it! Don't like the font? Use a different one! Download custom widgets in one click and add them to your desktop or panel. KDE.org Install KDE Plasma Installer > System Role : Select Desktop with KDE Plasma XFCE \u2693\ufe0e XFCE is a lightweight desktop environment for UNIX-like operating systems. It aims to be fast and low on system resources, while still being visually appealing and user friendly. XFCE embodies the traditional UNIX philosophy of modularity and re-usability. It consists of a number of components that provide the full functionality one can expect of a modern desktop environment. They are packaged separately and you can pick among the available packages to create the optimal personal working environment. Another priority of XFCE is adherence to standards, specifically those defined at freedesktop.org . XFCE.org Install XFCE Tumbleweed: Installer > System Role : Select Desktop with Xfce Leap: Installer > System Role : Select Generic Desktop Installer > Installer Settings : Select Software Installer > Software Selection and System Tasks : De-Select A very basic desktop Select XFCE Desktop Environment Note Clicking the Details... button on Installer > Software Selection and System Tasks displays packages associated with the respective patterns. Generic Desktop \u2693\ufe0e Another option for a System Role is the Generic Desktop environment. This option enables IceWM , but also allows selection of one of the optional desktop environments later, during the Software selection of the installation. If you intend to choose one of the other desktop environments, choose Yes , when asked \"Activate online repositories now?\" and ensure Main Repository (OSS) is enabled on the Online Repositories step. IceWM \u2693\ufe0e IceWM is a window manager for the X Window System. The goal of IceWM is speed, simplicity, and not getting in the user\u2019s way. It comes with a taskbar with pager, global and per-window keybindings and a dynamic menu system. Application windows can be managed by the keyboard and mouse. Windows can be iconified to the taskbar, to the tray, to the desktop or be hidden. They are controllable by a quick switch window (Alt+Tab) and in a window list. Ice-WM.org Install IceWM Installer > System Role : Select Generic Desktop Additional Choices \u2693\ufe0e Before confirming the installation, an overview is provided with the selected installation options, titled Installer Settings . At this point, you can modify the Software selected to be installed. In addition to reducing or adding packages, you can also select other desktop environments to install. If you prefer one of these desktop environments, de-select the A very basic desktop pattern, then select one of the below patterns: Enlightenment \u2693\ufe0e Enlightenment is classified as a \"desktop shell\" as it provides everything you need to operate your desktop or laptop, but it is not a full application suite. This covers functionality including launching applications, managing their windows and performing system tasks like suspending, rebooting, managing files and so on. Enlightenment.org Install Enlightment Installer > System Role : Select Generic Desktop Installer > Installer Settings : Select Software Installer > Software Selection and System Tasks : De-Select A very basic desktop Select Enlightenment Note Clicking the Details... button on Installer > Software Selection and System Tasks displays packages associated with the respective patterns. LXDE \u2693\ufe0e LXDE, which stands for Lightweight X11 Desktop Environment, is a desktop environment which is lightweight and fast. It is designed to be user friendly and slim, while keeping the resource usage low. LXDE uses less RAM and less CPU while being a feature rich desktop environment. Unlike other tightly integrated desktops LXDE strives to be modular, so each component can be used independently with few dependencies. This makes porting LXDE to different distributions and platforms easier. LXDE.org Install LXDE Installer > System Role : Select Generic Desktop Installer > Installer Settings : Select Software Installer > Software Selection and System Tasks : De-Select A very basic desktop Select LXDE Desktop Environment Note Clicking the Details... button on Installer > Software Selection and System Tasks displays packages associated with the respective patterns. LXQt \u2693\ufe0e LXQt is a Lightweight Qt Desktop Environment. It will not get in your way. It will not hang or slow down your system. It is focused on being a classic desktop with a modern look and feel. Historically, LXQt is the product of the merge between LXDE-Qt, an initial Qt flavour of LXDE, and Razor-qt, a project aiming to develop a Qt based desktop environment with similar objectives as the current LXQt. LXQt-Project.org Install LXQt Installer > System Role : Select Generic Desktop Installer > Installer Settings : Select Software Installer > Software Selection and System Tasks : De-Select A very basic desktop Select LXQt Desktop Environment Note Clicking the Details... button on Installer > Software Selection and System Tasks displays packages associated with the respective patterns. MATE \u2693\ufe0e The MATE Desktop Environment is the continuation of GNOME 2. It provides an intuitive and attractive desktop environment using traditional metaphors for Linux and other Unix-like operating systems. MATE is under active development to add support for new technologies while preserving a traditional desktop experience. Mate-Desktop.org Install MATE Installer > System Role : Select Generic Desktop Installer > Installer Settings : Select Software Installer > Software Selection and System Tasks : De-Select A very basic desktop Select MATE Desktop Environment Note Clicking the Details... button on Installer > Software Selection and System Tasks displays packages associated with the respective patterns. Sway \u2693\ufe0e Sway allows you to arrange your application windows logically, rather than spatially. Windows are arranged into a grid by default which maximizes the efficiency of your screen and can be quickly manipulated using only the keyboard. SwayWM.org Install Sway Installer > System Role : Select Generic Desktop Installer > Installer Settings : Select Software Installer > Software Selection and System Tasks : De-Select A very basic desktop Select The openSUSEway desktop environment pattern Note Clicking the Details... button on Installer > Software Selection and System Tasks displays packages associated with the respective patterns. Advanced Options \u2693\ufe0e Cinnamon \u2693\ufe0e Cinnamon is a Linux desktop which provides advanced innovative features and a traditional user experience. The desktop layout is similar to Gnome 2 with underlying technology forked from Gnome Shell. Cinnamon makes users feel at home with an easy to use and comfortable desktop experience. LinuxMint.com Install Cinnamon Tumbleweed: Installer > System Role : Select Generic Desktop Installer > Installer Settings : Select Software Installer > Software Selection and System Tasks : De-Select A very basic desktop Ensure Selection of X Windows System Click Details... Click Search tab Search for and Select cinnamon Click Accept and Continue Note In this setup configuration, you shouldn't have any Desktop Environment patterns selected, unless you desire multiple desktop environments. Clicking the Details... button on Installer > Software Selection and System Tasks displays packages associated with the respective patterns.","title":"Choosing a distribution"},{"location":"pick_an_image/#choosing-a-distribution","text":"","title":"Choosing a distribution"},{"location":"pick_an_image/#opensuse-distributions","text":"If you are a desktop user, openSUSE offers the choice between two Linux distributions designed to meet your needs: Tumbleweed Leap","title":"openSUSE distributions"},{"location":"pick_an_image/#tumbleweed","text":"Tumbleweed is a rolling-release distribution: instead of having fixed points where you will be offered to perform a system upgrade (think of Windows, Ubuntu, or macOS, where each numbered version leads to the next), you will be frequently offered to upgrade multiple components of your system. Info Those components are called packages , because they \"pack\" the programs and resources making up most of your system, along with tools to install them). \"Upgrading\" means \"Upgrading packages\" (such as those that constitute your Linux distribution). Even though Tumbleweed uses a rolling-release model, it is very stable: openSUSE thoroughly tests every package before going into an update, ensuring the stability of your system. Moreover you can always revert back to the previous state of Tumbleweed (in jargon: \"switch to the previous snapshot\". Snapshots are explained here ). What you have to bear in mind, however, is that Tumbleweed requires a reliable internet connection and a healthy hard drive to work as designed. It also requires that you sometimes take interest in the updating process.","title":"Tumbleweed"},{"location":"pick_an_image/#leap","text":"Leap is a more traditional distribution: it uses a fixed-points release model, just like Windows, Ubuntu, or macOS. Leap is a very battle-hardened operating system, mostly made up of packages brought over from SUSE Linux Enterprise, a commercial Linux operating system for servers, and of packages from Tumbleweed after they were tested, tried and used by the community. It is worth noting that Leap provides a Linux kernel that is several years behind the version offered by Tumbleweed. Info The kernel is the heart of any Linux operating system. It translates your keystrokes and mouse clicks into the ones and zeros the computer understands, and is updated regularly so that the computer can respond to new hardware added to the system.\" . This means that you might be better served by Tumbleweed if you have a recent computer or rely extensively on \"exotic\" hardware.","title":"Leap"},{"location":"pick_an_image/#our-recommendation","text":"Pick Tumbleweed if you intend to use your machine as a desktop machine unless: You have a very limited bandwidth or an unreliable access to the Internet. You have an old (7+ years old mechanical hard drive that will struggle with frequent, numerous updates. You cannot afford to reboot your computer frequently to install updates. You don't want to use, or switch between, different snapshots. Your rely on specific versions of important packages, including hardware drivers, and generally speaking you don't want or cannot take advantage of recent packages, including recent kernels. You would rather not do package management manually and more generally, you would rather avoid using the command line. The more conditions apply to your use case, the stronger we recommend you to install Leap instead of Tumbleweed. Info It is not recommended for new users, however, it is possible to use microOS on a desktop computer, taking advantage of transactional updates. This might appeal to advanced users who want to provide friends or relatives with an operating system that will require little to no maintenance. You might be interested in our microOS documentation for more about this use case.","title":"Our recommendation"},{"location":"pick_an_image/#desktop-environments","text":"Leap offers the GNOME and KDE Plasma desktop environments by default. Tumbleweed offers GNOME , KDE Plasma , and XFCE . These options are chosen during the System Role section of the installation. Additional options are available in the Software selection of the installer. These desktop environment patterns may also be viewed and modified with the YaST Software Management module. Modern desktop environments have evolved into highly consistent and productive computing experiences. Choosing the right desktop environment for you can be a deeply personal experience; many people feel as passionately about their desktop environment as they do their distribution. One of the distinguishing options of openSUSE, during the installation, is the ability to choose a desktop environment. This provides a certain level of assurance that you will have a well-supported desktop experience for that desktop environment, no derivatives or spin-offs needed.","title":"Desktop Environments"},{"location":"pick_an_image/#installation","text":"During openSUSE Installation , there is a section titled System Role , which applies patterns to the software selected for the respective installation. This is the primary means to select a desktop environment. There is an additional option titled Generic Desktop . If you wish to install a desktop environment available in the installer, but not in the System Role , you can select Generic Desktop and customize the Software selection later within the installer. The descriptions below are as provided by the respective projects.","title":"Installation"},{"location":"pick_an_image/#gnome","text":"GNOME 3 has been designed from the ground up to help you have the best possible computing experience. GNOME 3 provides a focused working environment that helps you to get things done, and it is packed with features that will make you more productive. A powerful search feature lets you access all your work from one place. Side-by-side windows makes it easy to view several documents at the same time, and we even provide a way to turn off notifications when you really need to concentrate on the task in hand. GNOME.org Install Gnome Installer > System Role : Select Desktop with GNOME","title":"GNOME"},{"location":"pick_an_image/#kde-plasma","text":"Plasma is made to stay out of the way as it helps you get things done. But under its light and intuitive surface, it's a powerhouse. So you're free to choose ways of usage right as you need them and when you need them. With Plasma the user is king. Not happy with the color scheme? Change it! Want to have your panel on the left edge of the screen? Move it! Don't like the font? Use a different one! Download custom widgets in one click and add them to your desktop or panel. KDE.org Install KDE Plasma Installer > System Role : Select Desktop with KDE Plasma","title":"KDE Plasma"},{"location":"pick_an_image/#xfce","text":"XFCE is a lightweight desktop environment for UNIX-like operating systems. It aims to be fast and low on system resources, while still being visually appealing and user friendly. XFCE embodies the traditional UNIX philosophy of modularity and re-usability. It consists of a number of components that provide the full functionality one can expect of a modern desktop environment. They are packaged separately and you can pick among the available packages to create the optimal personal working environment. Another priority of XFCE is adherence to standards, specifically those defined at freedesktop.org . XFCE.org Install XFCE Tumbleweed: Installer > System Role : Select Desktop with Xfce Leap: Installer > System Role : Select Generic Desktop Installer > Installer Settings : Select Software Installer > Software Selection and System Tasks : De-Select A very basic desktop Select XFCE Desktop Environment Note Clicking the Details... button on Installer > Software Selection and System Tasks displays packages associated with the respective patterns.","title":"XFCE"},{"location":"pick_an_image/#generic-desktop","text":"Another option for a System Role is the Generic Desktop environment. This option enables IceWM , but also allows selection of one of the optional desktop environments later, during the Software selection of the installation. If you intend to choose one of the other desktop environments, choose Yes , when asked \"Activate online repositories now?\" and ensure Main Repository (OSS) is enabled on the Online Repositories step.","title":"Generic Desktop"},{"location":"pick_an_image/#icewm","text":"IceWM is a window manager for the X Window System. The goal of IceWM is speed, simplicity, and not getting in the user\u2019s way. It comes with a taskbar with pager, global and per-window keybindings and a dynamic menu system. Application windows can be managed by the keyboard and mouse. Windows can be iconified to the taskbar, to the tray, to the desktop or be hidden. They are controllable by a quick switch window (Alt+Tab) and in a window list. Ice-WM.org Install IceWM Installer > System Role : Select Generic Desktop","title":"IceWM"},{"location":"pick_an_image/#additional-choices","text":"Before confirming the installation, an overview is provided with the selected installation options, titled Installer Settings . At this point, you can modify the Software selected to be installed. In addition to reducing or adding packages, you can also select other desktop environments to install. If you prefer one of these desktop environments, de-select the A very basic desktop pattern, then select one of the below patterns:","title":"Additional Choices"},{"location":"pick_an_image/#enlightenment","text":"Enlightenment is classified as a \"desktop shell\" as it provides everything you need to operate your desktop or laptop, but it is not a full application suite. This covers functionality including launching applications, managing their windows and performing system tasks like suspending, rebooting, managing files and so on. Enlightenment.org Install Enlightment Installer > System Role : Select Generic Desktop Installer > Installer Settings : Select Software Installer > Software Selection and System Tasks : De-Select A very basic desktop Select Enlightenment Note Clicking the Details... button on Installer > Software Selection and System Tasks displays packages associated with the respective patterns.","title":"Enlightenment"},{"location":"pick_an_image/#lxde","text":"LXDE, which stands for Lightweight X11 Desktop Environment, is a desktop environment which is lightweight and fast. It is designed to be user friendly and slim, while keeping the resource usage low. LXDE uses less RAM and less CPU while being a feature rich desktop environment. Unlike other tightly integrated desktops LXDE strives to be modular, so each component can be used independently with few dependencies. This makes porting LXDE to different distributions and platforms easier. LXDE.org Install LXDE Installer > System Role : Select Generic Desktop Installer > Installer Settings : Select Software Installer > Software Selection and System Tasks : De-Select A very basic desktop Select LXDE Desktop Environment Note Clicking the Details... button on Installer > Software Selection and System Tasks displays packages associated with the respective patterns.","title":"LXDE"},{"location":"pick_an_image/#lxqt","text":"LXQt is a Lightweight Qt Desktop Environment. It will not get in your way. It will not hang or slow down your system. It is focused on being a classic desktop with a modern look and feel. Historically, LXQt is the product of the merge between LXDE-Qt, an initial Qt flavour of LXDE, and Razor-qt, a project aiming to develop a Qt based desktop environment with similar objectives as the current LXQt. LXQt-Project.org Install LXQt Installer > System Role : Select Generic Desktop Installer > Installer Settings : Select Software Installer > Software Selection and System Tasks : De-Select A very basic desktop Select LXQt Desktop Environment Note Clicking the Details... button on Installer > Software Selection and System Tasks displays packages associated with the respective patterns.","title":"LXQt"},{"location":"pick_an_image/#mate","text":"The MATE Desktop Environment is the continuation of GNOME 2. It provides an intuitive and attractive desktop environment using traditional metaphors for Linux and other Unix-like operating systems. MATE is under active development to add support for new technologies while preserving a traditional desktop experience. Mate-Desktop.org Install MATE Installer > System Role : Select Generic Desktop Installer > Installer Settings : Select Software Installer > Software Selection and System Tasks : De-Select A very basic desktop Select MATE Desktop Environment Note Clicking the Details... button on Installer > Software Selection and System Tasks displays packages associated with the respective patterns.","title":"MATE"},{"location":"pick_an_image/#sway","text":"Sway allows you to arrange your application windows logically, rather than spatially. Windows are arranged into a grid by default which maximizes the efficiency of your screen and can be quickly manipulated using only the keyboard. SwayWM.org Install Sway Installer > System Role : Select Generic Desktop Installer > Installer Settings : Select Software Installer > Software Selection and System Tasks : De-Select A very basic desktop Select The openSUSEway desktop environment pattern Note Clicking the Details... button on Installer > Software Selection and System Tasks displays packages associated with the respective patterns.","title":"Sway"},{"location":"pick_an_image/#advanced-options","text":"","title":"Advanced Options"},{"location":"pick_an_image/#cinnamon","text":"Cinnamon is a Linux desktop which provides advanced innovative features and a traditional user experience. The desktop layout is similar to Gnome 2 with underlying technology forked from Gnome Shell. Cinnamon makes users feel at home with an easy to use and comfortable desktop experience. LinuxMint.com Install Cinnamon Tumbleweed: Installer > System Role : Select Generic Desktop Installer > Installer Settings : Select Software Installer > Software Selection and System Tasks : De-Select A very basic desktop Ensure Selection of X Windows System Click Details... Click Search tab Search for and Select cinnamon Click Accept and Continue Note In this setup configuration, you shouldn't have any Desktop Environment patterns selected, unless you desire multiple desktop environments. Clicking the Details... button on Installer > Software Selection and System Tasks displays packages associated with the respective patterns.","title":"Cinnamon"},{"location":"reference_docs/","text":"Reference Documentation \u2693\ufe0e Suse and openSUSE have authored a comprehensive set of reference documentation and guides suitable for corporate users and system administrators. Todo Complete links, only a first line links are currently populated. Source links Guide Paginated HTML Single HTML PDF EPUB Startup Guide Paginated HTML Single HTML PDF EPUB GNOME User Guide Paginated HTML Single HTML PDF EPUB Reference Guide Paginated HTML Single HTML PDF EPUB Sedurity Guide Paginated HTML Single HTML PDF EPUB Tuning Guide Paginated HTML Single HTML PDF EPUB Virtualization Guide Paginated HTML Single HTML PDF EPUB AutoYaST Guide Paginated HTML Single HTML PDF EPUB Release Notes Single HTML","title":"Other sources of documentation"},{"location":"reference_docs/#reference-documentation","text":"Suse and openSUSE have authored a comprehensive set of reference documentation and guides suitable for corporate users and system administrators. Todo Complete links, only a first line links are currently populated. Source links Guide Paginated HTML Single HTML PDF EPUB Startup Guide Paginated HTML Single HTML PDF EPUB GNOME User Guide Paginated HTML Single HTML PDF EPUB Reference Guide Paginated HTML Single HTML PDF EPUB Sedurity Guide Paginated HTML Single HTML PDF EPUB Tuning Guide Paginated HTML Single HTML PDF EPUB Virtualization Guide Paginated HTML Single HTML PDF EPUB AutoYaST Guide Paginated HTML Single HTML PDF EPUB Release Notes Single HTML","title":"Reference Documentation"},{"location":"snapper/","text":"Snapper \u2693\ufe0e Snapper is a tool for filesystem snapshot management. It can create, delete and compare snapshots and undo changes from one snapshot to the next. Snapper is a powerful maintenance tool to keep your system running, with very little downtime, if something should go wrong. Snapper has both a Command Line Interface (CLI) and Graphical Interface , not all functionality is available through the graphical interface but inexperienced users should find it sufficient for basic Snapper tasks. Snapper is deeply integrated with the Btrfs filesystem, serving as an easy to use helper for the built in functions of Btrfs. The most common Btrfs tasks can be conducted with Snapper, however, there may be instances when it is necessary to interact with Btrfs directly. Tumbleweed users should note that understanding how to use Snapper is an important step in maintaining a stable, functional system. As a rolling release, Tumbleweed, is subjected to less testing overall and the occasional system breaking update can be installed. Such problems are quickly and easily resolved with Snapper. Snapper capabilities \u2693\ufe0e Undo system changes made by zypper and YaST. Restore files from previous snapshots. Do a system rollback by booting from a snapshot. Manually create and manage snapshots, within the running system. Defaults \u2693\ufe0e By default, openSUSE Tumbleweed formats your hard drive with the Btrfs filesystem which provides the powerful snapshot capabilities. Snapshots are automatically enabled for the root partition / . The default snapshot configuration should only be changed by experienced users but it is important to note some default behaviour for new users as well. Snapshots are automatically enabled for the root / partition if it is larger than 16 Gigabytes. This is to ensure there is enough disk space for the snapshots and important system tasks to occure, which may include moving, writing or deleting files. If the root / partition is smaller than 16 Gigabytes a different kind of snapshot is used, known as \"Timeline Snapshots\". These snapshots are created every hour. By default only the first snapshot of the last ten days, months, and years are kept. This ensures there are some snapshots for system rollbacks while taking up very minimal disk space. The users /home directory is not included in snapshots and should not be relied on as a data backup for personal files. This prevents data loss if a system rollback is conducted. Changes to personal files would also be \"undone\". Directories /opt and /usr/local , where various software and third-party products are installed are not included in snapshots by default. This prevents uninstalling the software if a system rollback is conducted. Choosing a Snapshot \u2693\ufe0e Snapshot Types \u2693\ufe0e snapper features 3 types of snapshots: Timeline , Installation , and Administration . Timeline snapshots are single snapshots, created every hour and old snapshots are automatically deleted. By default, the first snapshot of the last ten days, months, and years are kept. Disabled by default on partitions larger than 16 Gigabytes. The only single snapshots present may be the ones created when openSUSE was installed. Installation snapshots are created in pairs ( Pre and Post ) when packages are installed with YaST or Zypper. Snapshot pairs are marked as important if an important system component, such as the kernel, has been installed. Enabled by default. Administration snapshots are created in pairs ( Pre and Post ) when system administration is performed using YaST. The Pre snapshot is created when a YaST module is started and the Post snapshot is created when the module is closed. Enabled by default. Note The last ten important and the last ten regular snapshot pairs are kept. This total encompasses both Installation and Administration snapshot types. Snapshots are automatically deleted when they take up too much space on the disk, but four important and two regular snapshots are always kept. Identifying Snapshots \u2693\ufe0e There are two ways to identify which snapshot you may want to rollback to: * with the snapper command line utility * with the YaST utility at YaST > Filesystem Snapshots Snapper command line: $ sudo snapper list Snapper CLI Example $ sudo snapper list [sudo] password for root: # | Type | Pre # | Date | User | Cleanup | Description | Userdata ----+--------+-------+---------------------------------+------+---------+-----------------------+-------------- 0 | single | | | root | | current | 1* | single | | Thu 17 Dec 2020 10:59:10 PM MST | root | | first root filesystem | 2 | single | | Fri 18 Dec 2020 12:02:05 AM MST | root | number | after installation | important=yes 39 | pre | | Sat 19 Dec 2020 01:58:34 PM MST | root | number | zypp(zypper) | important=no 40 | post | 39 | Sat 19 Dec 2020 01:58:54 PM MST | root | number | | important=no 41 | pre | | Sat 19 Dec 2020 01:59:02 PM MST | root | number | zypp(zypper) | important=no 42 | post | 41 | Sat 19 Dec 2020 01:59:59 PM MST | root | number | | important=no 43 | pre | | Sun 20 Dec 2020 05:30:27 PM MST | root | number | yast firewall | 44 | pre | | Sun 20 Dec 2020 05:31:17 PM MST | root | number | yast firewall | 45 | post | 43 | Sun 20 Dec 2020 05:31:17 PM MST | root | number | | 46 | post | 44 | Sun 20 Dec 2020 05:31:38 PM MST | root | number | | 47 | pre | | Sun 20 Dec 2020 05:36:25 PM MST | root | number | zypp(zypper) | important=no 48 | post | 47 | Sun 20 Dec 2020 05:37:00 PM MST | root | number | | important=no 49 | pre | | Tue 22 Dec 2020 07:40:20 PM MST | root | number | yast snapper | 50 | pre | | Tue 22 Dec 2020 07:42:33 PM MST | root | number | zypp(zypper) | important=yes 51 | post | 50 | Tue 22 Dec 2020 07:46:28 PM MST | root | number | | important=yes Snapper YaST interface example Note As snapshots are viewed, snapper will create more snapshots, because administrative tasks are being performed. Moving forward with the assumption there was an issue with the last zypper update, #47 is chosen as the snapshot to recover. Initiating Rollback \u2693\ufe0e Upon identification of a recovery snapshot, reboot openSUSE. At the boot menu, scroll down to, and select, Start bootloader from a read-only snapshot . On the Read-only Snapshot menu, scroll down to, and select, the desired recovery snapshot. Snapshot #47 is used here as an example. openSUSE will appear to boot as normal. Tip There isn't a scroll indicator on the Read-only Snapshot Menu, but it is possible to scroll down to select more options, if available. Finalizing Rollback \u2693\ufe0e Once your system has booted, the rollback is completed by running: $ sudo snapper rollback Your system should then be rebooted and the recovered snapshot will be the new default boot option. Snapper Resources Snapper.io openSUSE Wiki Portal:Snapper","title":"Snapper"},{"location":"snapper/#snapper","text":"Snapper is a tool for filesystem snapshot management. It can create, delete and compare snapshots and undo changes from one snapshot to the next. Snapper is a powerful maintenance tool to keep your system running, with very little downtime, if something should go wrong. Snapper has both a Command Line Interface (CLI) and Graphical Interface , not all functionality is available through the graphical interface but inexperienced users should find it sufficient for basic Snapper tasks. Snapper is deeply integrated with the Btrfs filesystem, serving as an easy to use helper for the built in functions of Btrfs. The most common Btrfs tasks can be conducted with Snapper, however, there may be instances when it is necessary to interact with Btrfs directly. Tumbleweed users should note that understanding how to use Snapper is an important step in maintaining a stable, functional system. As a rolling release, Tumbleweed, is subjected to less testing overall and the occasional system breaking update can be installed. Such problems are quickly and easily resolved with Snapper.","title":"Snapper"},{"location":"snapper/#snapper-capabilities","text":"Undo system changes made by zypper and YaST. Restore files from previous snapshots. Do a system rollback by booting from a snapshot. Manually create and manage snapshots, within the running system.","title":"Snapper capabilities"},{"location":"snapper/#defaults","text":"By default, openSUSE Tumbleweed formats your hard drive with the Btrfs filesystem which provides the powerful snapshot capabilities. Snapshots are automatically enabled for the root partition / . The default snapshot configuration should only be changed by experienced users but it is important to note some default behaviour for new users as well. Snapshots are automatically enabled for the root / partition if it is larger than 16 Gigabytes. This is to ensure there is enough disk space for the snapshots and important system tasks to occure, which may include moving, writing or deleting files. If the root / partition is smaller than 16 Gigabytes a different kind of snapshot is used, known as \"Timeline Snapshots\". These snapshots are created every hour. By default only the first snapshot of the last ten days, months, and years are kept. This ensures there are some snapshots for system rollbacks while taking up very minimal disk space. The users /home directory is not included in snapshots and should not be relied on as a data backup for personal files. This prevents data loss if a system rollback is conducted. Changes to personal files would also be \"undone\". Directories /opt and /usr/local , where various software and third-party products are installed are not included in snapshots by default. This prevents uninstalling the software if a system rollback is conducted.","title":"Defaults"},{"location":"snapper/#choosing-a-snapshot","text":"","title":"Choosing a Snapshot"},{"location":"snapper/#snapshot-types","text":"snapper features 3 types of snapshots: Timeline , Installation , and Administration . Timeline snapshots are single snapshots, created every hour and old snapshots are automatically deleted. By default, the first snapshot of the last ten days, months, and years are kept. Disabled by default on partitions larger than 16 Gigabytes. The only single snapshots present may be the ones created when openSUSE was installed. Installation snapshots are created in pairs ( Pre and Post ) when packages are installed with YaST or Zypper. Snapshot pairs are marked as important if an important system component, such as the kernel, has been installed. Enabled by default. Administration snapshots are created in pairs ( Pre and Post ) when system administration is performed using YaST. The Pre snapshot is created when a YaST module is started and the Post snapshot is created when the module is closed. Enabled by default. Note The last ten important and the last ten regular snapshot pairs are kept. This total encompasses both Installation and Administration snapshot types. Snapshots are automatically deleted when they take up too much space on the disk, but four important and two regular snapshots are always kept.","title":"Snapshot Types"},{"location":"snapper/#identifying-snapshots","text":"There are two ways to identify which snapshot you may want to rollback to: * with the snapper command line utility * with the YaST utility at YaST > Filesystem Snapshots Snapper command line: $ sudo snapper list Snapper CLI Example $ sudo snapper list [sudo] password for root: # | Type | Pre # | Date | User | Cleanup | Description | Userdata ----+--------+-------+---------------------------------+------+---------+-----------------------+-------------- 0 | single | | | root | | current | 1* | single | | Thu 17 Dec 2020 10:59:10 PM MST | root | | first root filesystem | 2 | single | | Fri 18 Dec 2020 12:02:05 AM MST | root | number | after installation | important=yes 39 | pre | | Sat 19 Dec 2020 01:58:34 PM MST | root | number | zypp(zypper) | important=no 40 | post | 39 | Sat 19 Dec 2020 01:58:54 PM MST | root | number | | important=no 41 | pre | | Sat 19 Dec 2020 01:59:02 PM MST | root | number | zypp(zypper) | important=no 42 | post | 41 | Sat 19 Dec 2020 01:59:59 PM MST | root | number | | important=no 43 | pre | | Sun 20 Dec 2020 05:30:27 PM MST | root | number | yast firewall | 44 | pre | | Sun 20 Dec 2020 05:31:17 PM MST | root | number | yast firewall | 45 | post | 43 | Sun 20 Dec 2020 05:31:17 PM MST | root | number | | 46 | post | 44 | Sun 20 Dec 2020 05:31:38 PM MST | root | number | | 47 | pre | | Sun 20 Dec 2020 05:36:25 PM MST | root | number | zypp(zypper) | important=no 48 | post | 47 | Sun 20 Dec 2020 05:37:00 PM MST | root | number | | important=no 49 | pre | | Tue 22 Dec 2020 07:40:20 PM MST | root | number | yast snapper | 50 | pre | | Tue 22 Dec 2020 07:42:33 PM MST | root | number | zypp(zypper) | important=yes 51 | post | 50 | Tue 22 Dec 2020 07:46:28 PM MST | root | number | | important=yes Snapper YaST interface example Note As snapshots are viewed, snapper will create more snapshots, because administrative tasks are being performed. Moving forward with the assumption there was an issue with the last zypper update, #47 is chosen as the snapshot to recover.","title":"Identifying Snapshots"},{"location":"snapper/#initiating-rollback","text":"Upon identification of a recovery snapshot, reboot openSUSE. At the boot menu, scroll down to, and select, Start bootloader from a read-only snapshot . On the Read-only Snapshot menu, scroll down to, and select, the desired recovery snapshot. Snapshot #47 is used here as an example. openSUSE will appear to boot as normal. Tip There isn't a scroll indicator on the Read-only Snapshot Menu, but it is possible to scroll down to select more options, if available.","title":"Initiating Rollback"},{"location":"snapper/#finalizing-rollback","text":"Once your system has booted, the rollback is completed by running: $ sudo snapper rollback Your system should then be rebooted and the recovered snapshot will be the new default boot option. Snapper Resources Snapper.io openSUSE Wiki Portal:Snapper","title":"Finalizing Rollback"},{"location":"todo/","text":"Things to do \u2693\ufe0e Note This page is temporary for onboarding and will be removed in doc releases. Theme \u2693\ufe0e [x] Fix logo color [ ] Replace goole fonts [ ] Fix logo size and aspect ratio Current Articles \u2693\ufe0e [ ] Complete links in: Reference Documentation New Articles \u2693\ufe0e [ ] Leap or tumbleweed - distro_choice.md [ ] Full, live or net install - media_choice.md [ ] Desktop environment - desktop_choice.md [ ] Full disk install or dual boot - full_or_dual_boot.md [ ] Disk partitioning - disk_partition.md [ ] Disk encryption - disk_encryption.md [ ] Snapshots/Btrfs - btrfs.md [ ] Distros for special uses - other_distros.md [ ] Getting Help - help.md","title":"Todo"},{"location":"todo/#things-to-do","text":"Note This page is temporary for onboarding and will be removed in doc releases.","title":"Things to do"},{"location":"todo/#theme","text":"[x] Fix logo color [ ] Replace goole fonts [ ] Fix logo size and aspect ratio","title":"Theme"},{"location":"todo/#current-articles","text":"[ ] Complete links in: Reference Documentation","title":"Current Articles"},{"location":"todo/#new-articles","text":"[ ] Leap or tumbleweed - distro_choice.md [ ] Full, live or net install - media_choice.md [ ] Desktop environment - desktop_choice.md [ ] Full disk install or dual boot - full_or_dual_boot.md [ ] Disk partitioning - disk_partition.md [ ] Disk encryption - disk_encryption.md [ ] Snapshots/Btrfs - btrfs.md [ ] Distros for special uses - other_distros.md [ ] Getting Help - help.md","title":"New Articles"},{"location":"yast_installer/","text":"Step by step guide for openSUSE Leap \u2693\ufe0e Before you continue \u2693\ufe0e This guide targets openSUSE Leap ; however the differences between the installers for the openSUSE variants -- like Tumbleweed, MicroOS and Kubic -- are minor and most parts of the installer will be identical. Warning Expect slight differences in System Role and Installation Settings . Minimum system requirements \u2693\ufe0e Any AMD64/Intel* EM64T processor (32-bit processors are not supported). 1 GB physical RAM (4 GB or more strongly recommended). 10 GB available disk space for a minimal installation, 16 GB for a graphical desktop (more is recommended). In case you plan to use Btrfs snapshots, a minimum of 40 GB for the root partition is recommended. Supports most modern sound and graphics cards, 1024 x 768 display resolution (higher recommended). Precautions \u2693\ufe0e Make sure that you have backed up all your data from the disk where you're planning to install openSUSE to. If installing on a separate drive, it is recommended to disconnect the drives not in use. You can always probe a foreign operating systems to Grub from a finalized installation with YaST , but selecting the wrong drive to install openSUSE will overwrite the disk destroying the data on it. In case you are using a Network image (Netiso) make sure that you have a strong internet connection. A wired connection is always more reliable than a wifi one. If installing on a laptop, it is good practice to plug in the AC charger. You are now ready to boot the USB drive, which you have previously prepared - as explained in the Preparing the installation media section - and turn on your computer. Boot from the USB drive and select installation from the boot menu. If you want to see the details of the installation while the installer is booting you can press the ESC key. Info On the left you will see a list of items where you can follow the steps you will take next or have already taken. You can always press Back in case you want to change something you configured earlier. Getting started \u2693\ufe0e Welcome \u2693\ufe0e Language, keyboard and license agreement \u2693\ufe0e Welcome to the YaST installer! Here you can change the language under Language (Alt+L), change the keyboard layout under Keyboard Layout (Alt+K) and you have a chance to test your selected keyboard layout in the field under Keyboard Test (Alt+y). The License Agreement informs you on roles, responsibilities and potential limitations. Network activation \u2693\ufe0e Online repositories If you have an active internet conenction over an ethernet cable connected to your computer, right after you pass the \"Language, Keyboard and License Agreement\" section you will be prompted, asking if you want to \"Activate online repositories now?\" .It is recommended to select Yes which will provide you with a list of repositories, pre-selecting the main ones in advance and will download updated packages from the online repositiory during the installation. If you're on a metered connection you press \"No\". Network settings \u2693\ufe0e You can skip this part if: * you have an active wired internet connection which can be automatically configured by the system; or * you're not planning to use online repositories during the installation process and rely on the packages provided by the DVD installer. If you don't have a network connection -- because you have don't have an ethernet port or you're using wireless connections only -- you will be prompted to configure your network settings. By default the YaST system installer is using Wicked as the network controller. Keep in mind that if you choose to use Network Manager (NM) instead of Wicked , your network configuration will not be transferred from Wicked to Network Manager . You will see a list of available network adapters in a list from which you can select the one that you wish to configure and press Edit . In case of configuring a wireless adapter you will see the Wireless Specific tab open. Here you can Scan Network , select the name of your wireless network (SSID), select the authentication mode -- which in most cases will be WPA-PSK \"home\" -- and input your password. On the Addresses tab you will be able to configure the IP address of your adapter. You can select Dynamic Address in which case you will receive an address from your router/other dhcp server on your network or Statically Assigned IP Address in which case you need to type an ip address, a subnet mask and a hostname. Click Next when finished. Info Wireless networks configured here will be transferred to the finalized system as well, regardless the soluion you are choosing to use to manage your connections. If you configured a statically assigned IP address: 1. Switch to the Routing tab. 2. Press Add , add your default gateway address and select the network adapter to which you want this route assigned to. 3. Press OK then Next to apply your changes and continue the installation. Online repositories \u2693\ufe0e List of online repositories \u2693\ufe0e These repositories are the following: Update Repository (Non-Oss) : Non-free -- as in Free Open-Source Software (FOSS) -- update repository. Provides security and maintenance updates for the distribution. Selected by default. Non-OSS Repository : Non-free repository. Provides packages like Steam. Selected by default. Main Update Repository : Main free -- as in FOSS -- update repository. Provides security and maintenance updates for the distribution. Selected by default. Main Repository : Main free repository provides FOSS only. Selected by default. Update Repository (Debug) : A repository for those who want to debug application updates for openSUSE, for experts only. Untested Updates : Security and maintenance updates that requires testing. Add this repository if you want to participate in testing. Source Repository : Provides all source packages in the distribution, for experts only. Debug Repository : A repository for those who want to debug applications for openSUSE, for experts only. Info Keep in mind that if you're on a metered network and you choose to add the online repos, the installer will download packages with newer versions. System role \u2693\ufe0e At this section of the preparation you can select from a list of predefined use cases which will tailor the system for the selected scenario. It is recommended to take a look at the Choosing the right image page prior to continuing as it provides a brief explanation of desktop environments. Do note if you're using a DVD installer without an active internet connection, some of the listed desktop envirnments will not be available. Desktop with KDE Plasma : the Plasma desktop with KDE applications. Desktop with GNOME : the GNOME desktop with GNOME applications. Generic Desktop : IceWM, a minimal desktop environment with minimal amount of packages. Server : A server installation without providing any graphical environment. Not recommended for inexperienced users. Transactional Server : A server installation with a read-only root filesystem in an immutable server style. This will provide atomic, automatic updates and packages can be installed with transactional-update only. Not recommended for inexperienced users. Select one and press Next to continue. Disk \u2693\ufe0e Suggested Partitioning \u2693\ufe0e Guided Setup \u2693\ufe0e Expert Partitioner \u2693\ufe0e About partition schemes \u2693\ufe0e Most Linux distributions use the same \"base\" partition scheme: a bootloader partition , hosting a small program called a bootloader , whose purpose is to take over from the UEFI/BIOS of your computer and set up the initial conditions for your operating system to get running a main data partition (or OS partition ), which is where the operating system (i.e. Leap ) is installed, optionnally along with your personal user data. (recommended but not necessary) a swap partition of the size of your machine's RAM, + 1 GB If you are not interested in keeping whatever data or operating system is installed on the target machine, you can simply proceed with the base partition scheme. In that cases, simply run the installer and, on the Disk screen, pick the Suggested Partitioning option, and accept all recommendations there. Chances are, however, that you will want to install Leap on a disk with an already functional operating system (i.e. Windows, macOS, or another Linux distribution). Or that you will want to install more operating systems alongside Leap easily and reliably in the future. These families of scenarios require some extra steps with respect ot to the \"base\" partition scheme above. Installing Leap alongside preexistent Windows partitions \u2693\ufe0e If you have Windows installed already, you are likely to have the following (physical) partitions already: one 'recovery partition', about 500 MB large, usually using the Fat32 filesystem (we won't consider it further as it is not relevant to what comes next) one 'Windows data' partition, usually using the Fat32 filesystem, hosting both Windows and your user data (you want to leave it untouched) one 'Windows bootloader' partition, about 100 MB large, using the Fat32 filesystem, hosting the Windows bootloader. We recommend adding to these physical partitions a single 'Leap OS' partition, at least 40 GB large, using the Btrfs filesystem. Please scroll down to pick a filesystem for data partitions to for more details as to why we recommend Btrfs . Info The 'Leap OS' partition will host the Leap bootloader under the /boot subvolume, the operating system directly under / and your user data under the /home subvolume. Do note that, by default, a /home directory will be installed to store your user data. Also by default, this directory will be excluded from the snapshotting system, which means that there will be no Btrfs backups for your user data. This permits rollbacks between snapshots to proceed smoothly, leaving your user data in no incoherent state. This also means that you will need to manually manage your user data back ups . Alternatively, you might want to install your user data under a separate partition, also mounted as /home , using any file system of your liking. This might come in handy if you plan on using multiple operating systems reading from, and writing to, a single user data partition. Whichever option you choose, you can refer to the following instructions: Step by step: Expert partitioning for Windows From the Disk view, select Expert Partioner Click the Add Partition button (bottom left-hand side) Assign it at least 40 GBs, and set its filesystem to Btrfs , and the mount point to / . You could label this partition 'Leap OS'. If it is not set already, set the /boot/efi flag your 'Windows bootloader' partition (the ~100MB partition probably using the Fat32 filesystem) (recommended) Add a swap partition with a size equal to your current RAM + 1 GB. Info Even though this makes no difference from the installer's point of view, we recommend assigning meaningful labels to each partition, to make them easier to reidentify them. The result should look like this: Check list: Expert partitioning for Windows (old) ... some other Windows partitions ... (old) /boot/efi , Fat32 , ~ 100 MB (new) / , Btrfs , > 40 GB Warning Because you are installing the Leap bootloader on a non-btrfs partition, the bootloader will be outside of the scope of the snapshotting system. This means that you won't be able to rollback from a misconfigured bootloader settings, and that in general rolling back won't suffice to fix issues with your bootloader configuration. See Introduction to snapper for details. Consider also the official documentation on snapper rollbacks. Optionnally, you could create a new partition for your user data under /home . This partition would then be easily accessible to other operating systems installed on your machine. If you do so, make sure there is no /home subvolume created inside the partition assigned to / . Info After the installation you will want to switch between Leap and Windows. Use these instructions to learn how to reboot to your UEFI. From there you will be able to select Windows or Leap as boot destination. Installing Leap alongside preexistent Linux partitions \u2693\ufe0e You can follow the Step by Step from the previous section, making sure that: you flag your already existent bootloader partition as /boot/efi (if it already exists on the disk before installing Leap ) you flag your user data partition as /home , or alternatively, that you apply steps (4 & 5) if you need to have a /home partition outside of / . Warning Make sure there is enough space (>100 MB is fine) on whatever partition you're installing your bootloader(s) to. Resize it if necessary. Check list: Expert partitioning for multiple Linux distributions (old) ... some other partitions ... (old) /boot/efi , preferably Btrfs , > 100 MB (new) / , Btrfs , > 40 GB Optionnally, you could create a new partition for your user data under /home . This partition would then be easily accessible to other operating systems installed on your machine. If you do so, make sure there is no /home subvolume created inside the partition assigned to / . Info After the installation you will want to switch between Leap and whichever operating system you're using. Refer to your machine's manufacturer for instructions. If your machine had Windows preinstalled, use these instructions to learn how to reboot to your UEFI. From there you will be able to select the desired boot destination. Installing Leap alongside preexistent macOS partitions \u2693\ufe0e The installation process for Mac users interested in dual-booting Leap alongside their mac OS partitions is simple: Step by step: Expert partitioning for Mac From the Disk view, select Expert Partioner Click the Add Partition button (bottom left-hand side) Create a new Btrfs partition of at least 100 MB for the Leap bootloader. Set it the /boot/efi mount point. You could label this partition 'Leap bootloader'. Create a new Btrfs partition of at least 40 GBs by repeating (2). Set it the / mount point. You could label this partition 'Leap OS'. (recommended) Create a swap partition with a size equal to your current RAM + 1 GB. Check list: Expert partitioning for macOS (old) ... some macOS partitions ... (new) /boot/efi , Btrfs , > 100 MB (new) / , Btrfs , > 40 GB Optionnally, you could create a new partition for your user data under /home . This partition would then be easily accessible to other operating systems installed on your machine. If you do so, make sure there is no /home subvolume created inside the partition assigned to / . Warning Some recent Macs have been reported to ship with firmware lock enabled by default. Refer to this guide to disable it. Info After the installation you will want to switch between Leap and macOS. Simply hold the alt (option) key immediately after restarting and select Leap or macOS. Picking a filesystem for data partitions \u2693\ufe0e The Leap installer allows you to pick among several filesystems for data partitions , which for the purpose of this section we define as any partition mounted as / (root) or having root on its path (i.e. /home ). Among the supported filesystems for data partitions you will find: Btrfs Ext4 XFS However, Btrfs has been the preferred filesystem for all openSUSE distributions for several years. This filesystem boasts a powerful copy-on-write logic, which lies at the heart of openSUSE's approach to stability: Btrfs allows to conveniently create and use snapshots , aka 'restoration points' on Windows (see Introduction to snapper for details). For this reason we highly recommend you to use it for all your data partitions when installing Leap . Info Snapshots take advantage of the copy-on-write logic of Btrfs . On a copy-on write filesystem, submitted changes do not overwrite the previous state; instead, changes are 'moved' to a different location on the disk, so that the location of origin is left unchanged. Together with 'deduplication' rules aimed at minimizing redundancies between file changes, this logic allows for the layering of several versions of an entire filesystem, with each layer representing different sets of changes. These sets of changes thus correspond to meaningful actions from the end user's perspective, such as 'before installing package X', 'before creating subvolume Y', etc. Renouncing Brtfs thus means renouncing this feature. Given that Tumbleweed was designed around this feature, it will not work as intended unless you pick this filesystem. LUKS encryption \u2693\ufe0e If you are installing Leap on a laptop, or generally on any machine accessible to untrusted individuals, we highly recommend protecting your data with a full disk encryption . The price to pay is that doing so will entirely wipe out your drive. The obvious advantage, however, is that this will protect your data with a sound security model. Info Full disk encryption contrasts with partition encryption in that it protects your entire physical drive using cryptographic techniques. For reasons that go beyond the scope of this document, partition encryption is significantly less secure than full disk encryption. In pictures, partition encryption is like locking your house with an old fashioned padlock and hiding the key in a flowerpot lying on the terrace, while full disk encryption is like locking your house with a digital padlock and keeping the code only in your mind. To apply full disk encryption while installing, you can either use the Guided Setup feature or manually create the partition scheme first and then apply encryption. If you do the latter, you can simply reproduce the steps listed below: Step by step: Guided partitioning for LUKS on Btrfs Select Guided Setup from the Disk screen Check Enable Disk Encryption , and enter a strong password in both text fields Then, on the Filesystem Options screen: Select Btrfs . Tick the Enable Snapshots checkbox ( scroll up or see this document to understand the reason why we recommend this). Select Btfs again as File System Type for your any mount point / partition presented to you by the installer. Alternatively, if you prefer to turn to a different filesystem than Btrfs (typically Ext4 ) follow the following steps: Warning Using Ext4 on either / or /boot will prevent you from using snapper snapshots. Step by step (Guided Setup: LUKS + LVM + Ext4) Select Guided Setup ' from the _Disk screen Check Enable LVM ' and _Enable Disk Encryption , and enter a strong password in both text fields Then, on the Filesystem Options screen: Select Ext4 . Tick the Enable Snapshots checkbox ( scroll up or see this document to understand the reason why we recommend this). Tick the Propose Separate Home LVM Logical Volume checkbox. Select Ext4 again as File System Type for your /home directory. Tick the Propose Separate Swap LVM Logical Volume . Info The recommended setup mentioned here makes use of the cryptsetup utility in conjunction with an LVM partition. cryptsetup is a popular and trusted tool in the Linux community implementing the LUKS Linux kernel standard, using the aes-xts-plain64 encryption standard. As for LVM, it is a partitioning scheme that allows your machine to see multiple physical disks as one single (logical) partition, or vice-versa, to see one unique physical disk as multiple (logical) partitions. LVM & LUKS work well together, with LVM considerably simplifying encryption - decryption operations. Time Zone \u2693\ufe0e Clock and Time Zone \u2693\ufe0e Select your region and the time zone that you want to use for the system. The hardware clock is by default set to UTC. Select Other Settings for other time settings: Manually : Set time and date manually. Synchronize with NTP Server : Automatically synchronize time and date with the provided NTP servers which you can initiate right now by selecting \"Synchronize now\" . Run NTP as daemon : Run NTP as a daemon so the service always runs and starts automatically on boot and sets the time and date based on the received values from the NTP server. Save NTP Configuration : save or discard the NTP configuration into the installed system. User Settings \u2693\ufe0e Local User \u2693\ufe0e At this point you can create a local user or skip that by selecting Skip User Creation you can set up a password for root . You need to fill out the empty fields in order to create a first user: User's Full Name : A human-friendly version of your username, which will be shown in login windows for example. Username : The actual username for your account. This will be used in all login contexts, whether dialogue boxes or terminal prompts, including virtual console (vc) or over Secure Shell (SSH). Password : The password for your user to secure your account. By default you will also use this newly created account to act as the administrator. The password set there will be set for the root user as well. Root user openSUSE creates the root user by default, in contrast to other Linux distributions. To avoid using the same password for both users, untick the Use this password for system administrator checkbox. Clicking Next will take you to the page where you can set a different password for root. At this page you can also import existing SSH public keys. This is useful if you're installing openSUSE over another distribution. Installation \u2693\ufe0e Installation Overview \u2693\ufe0e Installation Settings \u2693\ufe0e This is the final and probably the an important section of the installer, don't skip it ! You can and should review your settings, fine tune your installation if you need to and can even gain access to the YaST Software Installer wich can be used to install additional packages or patterns. To change any of the settings just click the headlines (like \"Software\" or \"Security\"). After you reviewed the settings you can move on with the installation which will finalize your openSUSE deployment based on your provided informations. Info Patterns are a group of packages that allows the user to easily install otherwise complex packages and configurations - like KDE Plasma or Gnome -.","title":"Step by step guide"},{"location":"yast_installer/#step-by-step-guide-for-opensuse-leap","text":"","title":"Step by step guide for openSUSE Leap"},{"location":"yast_installer/#before-you-continue","text":"This guide targets openSUSE Leap ; however the differences between the installers for the openSUSE variants -- like Tumbleweed, MicroOS and Kubic -- are minor and most parts of the installer will be identical. Warning Expect slight differences in System Role and Installation Settings .","title":"Before you continue"},{"location":"yast_installer/#minimum-system-requirements","text":"Any AMD64/Intel* EM64T processor (32-bit processors are not supported). 1 GB physical RAM (4 GB or more strongly recommended). 10 GB available disk space for a minimal installation, 16 GB for a graphical desktop (more is recommended). In case you plan to use Btrfs snapshots, a minimum of 40 GB for the root partition is recommended. Supports most modern sound and graphics cards, 1024 x 768 display resolution (higher recommended).","title":"Minimum system requirements"},{"location":"yast_installer/#precautions","text":"Make sure that you have backed up all your data from the disk where you're planning to install openSUSE to. If installing on a separate drive, it is recommended to disconnect the drives not in use. You can always probe a foreign operating systems to Grub from a finalized installation with YaST , but selecting the wrong drive to install openSUSE will overwrite the disk destroying the data on it. In case you are using a Network image (Netiso) make sure that you have a strong internet connection. A wired connection is always more reliable than a wifi one. If installing on a laptop, it is good practice to plug in the AC charger. You are now ready to boot the USB drive, which you have previously prepared - as explained in the Preparing the installation media section - and turn on your computer. Boot from the USB drive and select installation from the boot menu. If you want to see the details of the installation while the installer is booting you can press the ESC key. Info On the left you will see a list of items where you can follow the steps you will take next or have already taken. You can always press Back in case you want to change something you configured earlier.","title":"Precautions"},{"location":"yast_installer/#getting-started","text":"","title":"Getting started"},{"location":"yast_installer/#welcome","text":"","title":"Welcome"},{"location":"yast_installer/#language-keyboard-and-license-agreement","text":"Welcome to the YaST installer! Here you can change the language under Language (Alt+L), change the keyboard layout under Keyboard Layout (Alt+K) and you have a chance to test your selected keyboard layout in the field under Keyboard Test (Alt+y). The License Agreement informs you on roles, responsibilities and potential limitations.","title":"Language, keyboard and license agreement"},{"location":"yast_installer/#network-activation","text":"Online repositories If you have an active internet conenction over an ethernet cable connected to your computer, right after you pass the \"Language, Keyboard and License Agreement\" section you will be prompted, asking if you want to \"Activate online repositories now?\" .It is recommended to select Yes which will provide you with a list of repositories, pre-selecting the main ones in advance and will download updated packages from the online repositiory during the installation. If you're on a metered connection you press \"No\".","title":"Network activation"},{"location":"yast_installer/#network-settings","text":"You can skip this part if: * you have an active wired internet connection which can be automatically configured by the system; or * you're not planning to use online repositories during the installation process and rely on the packages provided by the DVD installer. If you don't have a network connection -- because you have don't have an ethernet port or you're using wireless connections only -- you will be prompted to configure your network settings. By default the YaST system installer is using Wicked as the network controller. Keep in mind that if you choose to use Network Manager (NM) instead of Wicked , your network configuration will not be transferred from Wicked to Network Manager . You will see a list of available network adapters in a list from which you can select the one that you wish to configure and press Edit . In case of configuring a wireless adapter you will see the Wireless Specific tab open. Here you can Scan Network , select the name of your wireless network (SSID), select the authentication mode -- which in most cases will be WPA-PSK \"home\" -- and input your password. On the Addresses tab you will be able to configure the IP address of your adapter. You can select Dynamic Address in which case you will receive an address from your router/other dhcp server on your network or Statically Assigned IP Address in which case you need to type an ip address, a subnet mask and a hostname. Click Next when finished. Info Wireless networks configured here will be transferred to the finalized system as well, regardless the soluion you are choosing to use to manage your connections. If you configured a statically assigned IP address: 1. Switch to the Routing tab. 2. Press Add , add your default gateway address and select the network adapter to which you want this route assigned to. 3. Press OK then Next to apply your changes and continue the installation.","title":"Network settings"},{"location":"yast_installer/#online-repositories","text":"","title":"Online repositories"},{"location":"yast_installer/#list-of-online-repositories","text":"These repositories are the following: Update Repository (Non-Oss) : Non-free -- as in Free Open-Source Software (FOSS) -- update repository. Provides security and maintenance updates for the distribution. Selected by default. Non-OSS Repository : Non-free repository. Provides packages like Steam. Selected by default. Main Update Repository : Main free -- as in FOSS -- update repository. Provides security and maintenance updates for the distribution. Selected by default. Main Repository : Main free repository provides FOSS only. Selected by default. Update Repository (Debug) : A repository for those who want to debug application updates for openSUSE, for experts only. Untested Updates : Security and maintenance updates that requires testing. Add this repository if you want to participate in testing. Source Repository : Provides all source packages in the distribution, for experts only. Debug Repository : A repository for those who want to debug applications for openSUSE, for experts only. Info Keep in mind that if you're on a metered network and you choose to add the online repos, the installer will download packages with newer versions.","title":"List of online repositories"},{"location":"yast_installer/#system-role","text":"At this section of the preparation you can select from a list of predefined use cases which will tailor the system for the selected scenario. It is recommended to take a look at the Choosing the right image page prior to continuing as it provides a brief explanation of desktop environments. Do note if you're using a DVD installer without an active internet connection, some of the listed desktop envirnments will not be available. Desktop with KDE Plasma : the Plasma desktop with KDE applications. Desktop with GNOME : the GNOME desktop with GNOME applications. Generic Desktop : IceWM, a minimal desktop environment with minimal amount of packages. Server : A server installation without providing any graphical environment. Not recommended for inexperienced users. Transactional Server : A server installation with a read-only root filesystem in an immutable server style. This will provide atomic, automatic updates and packages can be installed with transactional-update only. Not recommended for inexperienced users. Select one and press Next to continue.","title":"System role"},{"location":"yast_installer/#disk","text":"","title":"Disk"},{"location":"yast_installer/#suggested-partitioning","text":"","title":"Suggested Partitioning"},{"location":"yast_installer/#guided-setup","text":"","title":"Guided Setup"},{"location":"yast_installer/#expert-partitioner","text":"","title":"Expert Partitioner"},{"location":"yast_installer/#about-partition-schemes","text":"Most Linux distributions use the same \"base\" partition scheme: a bootloader partition , hosting a small program called a bootloader , whose purpose is to take over from the UEFI/BIOS of your computer and set up the initial conditions for your operating system to get running a main data partition (or OS partition ), which is where the operating system (i.e. Leap ) is installed, optionnally along with your personal user data. (recommended but not necessary) a swap partition of the size of your machine's RAM, + 1 GB If you are not interested in keeping whatever data or operating system is installed on the target machine, you can simply proceed with the base partition scheme. In that cases, simply run the installer and, on the Disk screen, pick the Suggested Partitioning option, and accept all recommendations there. Chances are, however, that you will want to install Leap on a disk with an already functional operating system (i.e. Windows, macOS, or another Linux distribution). Or that you will want to install more operating systems alongside Leap easily and reliably in the future. These families of scenarios require some extra steps with respect ot to the \"base\" partition scheme above.","title":"About partition schemes"},{"location":"yast_installer/#installing-leap-alongside-preexistent-windows-partitions","text":"If you have Windows installed already, you are likely to have the following (physical) partitions already: one 'recovery partition', about 500 MB large, usually using the Fat32 filesystem (we won't consider it further as it is not relevant to what comes next) one 'Windows data' partition, usually using the Fat32 filesystem, hosting both Windows and your user data (you want to leave it untouched) one 'Windows bootloader' partition, about 100 MB large, using the Fat32 filesystem, hosting the Windows bootloader. We recommend adding to these physical partitions a single 'Leap OS' partition, at least 40 GB large, using the Btrfs filesystem. Please scroll down to pick a filesystem for data partitions to for more details as to why we recommend Btrfs . Info The 'Leap OS' partition will host the Leap bootloader under the /boot subvolume, the operating system directly under / and your user data under the /home subvolume. Do note that, by default, a /home directory will be installed to store your user data. Also by default, this directory will be excluded from the snapshotting system, which means that there will be no Btrfs backups for your user data. This permits rollbacks between snapshots to proceed smoothly, leaving your user data in no incoherent state. This also means that you will need to manually manage your user data back ups . Alternatively, you might want to install your user data under a separate partition, also mounted as /home , using any file system of your liking. This might come in handy if you plan on using multiple operating systems reading from, and writing to, a single user data partition. Whichever option you choose, you can refer to the following instructions: Step by step: Expert partitioning for Windows From the Disk view, select Expert Partioner Click the Add Partition button (bottom left-hand side) Assign it at least 40 GBs, and set its filesystem to Btrfs , and the mount point to / . You could label this partition 'Leap OS'. If it is not set already, set the /boot/efi flag your 'Windows bootloader' partition (the ~100MB partition probably using the Fat32 filesystem) (recommended) Add a swap partition with a size equal to your current RAM + 1 GB. Info Even though this makes no difference from the installer's point of view, we recommend assigning meaningful labels to each partition, to make them easier to reidentify them. The result should look like this: Check list: Expert partitioning for Windows (old) ... some other Windows partitions ... (old) /boot/efi , Fat32 , ~ 100 MB (new) / , Btrfs , > 40 GB Warning Because you are installing the Leap bootloader on a non-btrfs partition, the bootloader will be outside of the scope of the snapshotting system. This means that you won't be able to rollback from a misconfigured bootloader settings, and that in general rolling back won't suffice to fix issues with your bootloader configuration. See Introduction to snapper for details. Consider also the official documentation on snapper rollbacks. Optionnally, you could create a new partition for your user data under /home . This partition would then be easily accessible to other operating systems installed on your machine. If you do so, make sure there is no /home subvolume created inside the partition assigned to / . Info After the installation you will want to switch between Leap and Windows. Use these instructions to learn how to reboot to your UEFI. From there you will be able to select Windows or Leap as boot destination.","title":"Installing Leap alongside preexistent Windows partitions"},{"location":"yast_installer/#installing-leap-alongside-preexistent-linux-partitions","text":"You can follow the Step by Step from the previous section, making sure that: you flag your already existent bootloader partition as /boot/efi (if it already exists on the disk before installing Leap ) you flag your user data partition as /home , or alternatively, that you apply steps (4 & 5) if you need to have a /home partition outside of / . Warning Make sure there is enough space (>100 MB is fine) on whatever partition you're installing your bootloader(s) to. Resize it if necessary. Check list: Expert partitioning for multiple Linux distributions (old) ... some other partitions ... (old) /boot/efi , preferably Btrfs , > 100 MB (new) / , Btrfs , > 40 GB Optionnally, you could create a new partition for your user data under /home . This partition would then be easily accessible to other operating systems installed on your machine. If you do so, make sure there is no /home subvolume created inside the partition assigned to / . Info After the installation you will want to switch between Leap and whichever operating system you're using. Refer to your machine's manufacturer for instructions. If your machine had Windows preinstalled, use these instructions to learn how to reboot to your UEFI. From there you will be able to select the desired boot destination.","title":"Installing Leap alongside preexistent Linux partitions"},{"location":"yast_installer/#installing-leap-alongside-preexistent-macos-partitions","text":"The installation process for Mac users interested in dual-booting Leap alongside their mac OS partitions is simple: Step by step: Expert partitioning for Mac From the Disk view, select Expert Partioner Click the Add Partition button (bottom left-hand side) Create a new Btrfs partition of at least 100 MB for the Leap bootloader. Set it the /boot/efi mount point. You could label this partition 'Leap bootloader'. Create a new Btrfs partition of at least 40 GBs by repeating (2). Set it the / mount point. You could label this partition 'Leap OS'. (recommended) Create a swap partition with a size equal to your current RAM + 1 GB. Check list: Expert partitioning for macOS (old) ... some macOS partitions ... (new) /boot/efi , Btrfs , > 100 MB (new) / , Btrfs , > 40 GB Optionnally, you could create a new partition for your user data under /home . This partition would then be easily accessible to other operating systems installed on your machine. If you do so, make sure there is no /home subvolume created inside the partition assigned to / . Warning Some recent Macs have been reported to ship with firmware lock enabled by default. Refer to this guide to disable it. Info After the installation you will want to switch between Leap and macOS. Simply hold the alt (option) key immediately after restarting and select Leap or macOS.","title":"Installing Leap alongside preexistent macOS partitions"},{"location":"yast_installer/#picking-a-filesystem-for-data-partitions","text":"The Leap installer allows you to pick among several filesystems for data partitions , which for the purpose of this section we define as any partition mounted as / (root) or having root on its path (i.e. /home ). Among the supported filesystems for data partitions you will find: Btrfs Ext4 XFS However, Btrfs has been the preferred filesystem for all openSUSE distributions for several years. This filesystem boasts a powerful copy-on-write logic, which lies at the heart of openSUSE's approach to stability: Btrfs allows to conveniently create and use snapshots , aka 'restoration points' on Windows (see Introduction to snapper for details). For this reason we highly recommend you to use it for all your data partitions when installing Leap . Info Snapshots take advantage of the copy-on-write logic of Btrfs . On a copy-on write filesystem, submitted changes do not overwrite the previous state; instead, changes are 'moved' to a different location on the disk, so that the location of origin is left unchanged. Together with 'deduplication' rules aimed at minimizing redundancies between file changes, this logic allows for the layering of several versions of an entire filesystem, with each layer representing different sets of changes. These sets of changes thus correspond to meaningful actions from the end user's perspective, such as 'before installing package X', 'before creating subvolume Y', etc. Renouncing Brtfs thus means renouncing this feature. Given that Tumbleweed was designed around this feature, it will not work as intended unless you pick this filesystem.","title":"Picking a filesystem for data partitions"},{"location":"yast_installer/#luks-encryption","text":"If you are installing Leap on a laptop, or generally on any machine accessible to untrusted individuals, we highly recommend protecting your data with a full disk encryption . The price to pay is that doing so will entirely wipe out your drive. The obvious advantage, however, is that this will protect your data with a sound security model. Info Full disk encryption contrasts with partition encryption in that it protects your entire physical drive using cryptographic techniques. For reasons that go beyond the scope of this document, partition encryption is significantly less secure than full disk encryption. In pictures, partition encryption is like locking your house with an old fashioned padlock and hiding the key in a flowerpot lying on the terrace, while full disk encryption is like locking your house with a digital padlock and keeping the code only in your mind. To apply full disk encryption while installing, you can either use the Guided Setup feature or manually create the partition scheme first and then apply encryption. If you do the latter, you can simply reproduce the steps listed below: Step by step: Guided partitioning for LUKS on Btrfs Select Guided Setup from the Disk screen Check Enable Disk Encryption , and enter a strong password in both text fields Then, on the Filesystem Options screen: Select Btrfs . Tick the Enable Snapshots checkbox ( scroll up or see this document to understand the reason why we recommend this). Select Btfs again as File System Type for your any mount point / partition presented to you by the installer. Alternatively, if you prefer to turn to a different filesystem than Btrfs (typically Ext4 ) follow the following steps: Warning Using Ext4 on either / or /boot will prevent you from using snapper snapshots. Step by step (Guided Setup: LUKS + LVM + Ext4) Select Guided Setup ' from the _Disk screen Check Enable LVM ' and _Enable Disk Encryption , and enter a strong password in both text fields Then, on the Filesystem Options screen: Select Ext4 . Tick the Enable Snapshots checkbox ( scroll up or see this document to understand the reason why we recommend this). Tick the Propose Separate Home LVM Logical Volume checkbox. Select Ext4 again as File System Type for your /home directory. Tick the Propose Separate Swap LVM Logical Volume . Info The recommended setup mentioned here makes use of the cryptsetup utility in conjunction with an LVM partition. cryptsetup is a popular and trusted tool in the Linux community implementing the LUKS Linux kernel standard, using the aes-xts-plain64 encryption standard. As for LVM, it is a partitioning scheme that allows your machine to see multiple physical disks as one single (logical) partition, or vice-versa, to see one unique physical disk as multiple (logical) partitions. LVM & LUKS work well together, with LVM considerably simplifying encryption - decryption operations.","title":"LUKS encryption"},{"location":"yast_installer/#time-zone","text":"","title":"Time Zone"},{"location":"yast_installer/#clock-and-time-zone","text":"Select your region and the time zone that you want to use for the system. The hardware clock is by default set to UTC. Select Other Settings for other time settings: Manually : Set time and date manually. Synchronize with NTP Server : Automatically synchronize time and date with the provided NTP servers which you can initiate right now by selecting \"Synchronize now\" . Run NTP as daemon : Run NTP as a daemon so the service always runs and starts automatically on boot and sets the time and date based on the received values from the NTP server. Save NTP Configuration : save or discard the NTP configuration into the installed system.","title":"Clock and Time Zone"},{"location":"yast_installer/#user-settings","text":"","title":"User Settings"},{"location":"yast_installer/#local-user","text":"At this point you can create a local user or skip that by selecting Skip User Creation you can set up a password for root . You need to fill out the empty fields in order to create a first user: User's Full Name : A human-friendly version of your username, which will be shown in login windows for example. Username : The actual username for your account. This will be used in all login contexts, whether dialogue boxes or terminal prompts, including virtual console (vc) or over Secure Shell (SSH). Password : The password for your user to secure your account. By default you will also use this newly created account to act as the administrator. The password set there will be set for the root user as well. Root user openSUSE creates the root user by default, in contrast to other Linux distributions. To avoid using the same password for both users, untick the Use this password for system administrator checkbox. Clicking Next will take you to the page where you can set a different password for root. At this page you can also import existing SSH public keys. This is useful if you're installing openSUSE over another distribution.","title":"Local User"},{"location":"yast_installer/#installation","text":"","title":"Installation"},{"location":"yast_installer/#installation-overview","text":"","title":"Installation Overview"},{"location":"yast_installer/#installation-settings","text":"This is the final and probably the an important section of the installer, don't skip it ! You can and should review your settings, fine tune your installation if you need to and can even gain access to the YaST Software Installer wich can be used to install additional packages or patterns. To change any of the settings just click the headlines (like \"Software\" or \"Security\"). After you reviewed the settings you can move on with the installation which will finalize your openSUSE deployment based on your provided informations. Info Patterns are a group of packages that allows the user to easily install otherwise complex packages and configurations - like KDE Plasma or Gnome -.","title":"Installation Settings"},{"location":"zypper/","text":"Zypper \u2693\ufe0e Zypper is a command line package manager for installing, updating and removing packages. It also manages repositories, can perform various queries, and is a command-line interface to ZYpp system management library (libzypp). Show Definitions repository Local or remote directory containing packages and various package information (package metadata). package Software package (RPM package, source package). Patches, patterns, and products are also commonly referred to as different types of packages. patch Represents a package or a group of packages needed to install an update (a bug fix mostly). pattern Represents a group of packages. For example an Http Server pattern would have the dependencies defined so that all packages needed to run and manage an http server would have been triggered for installation when upon installing the pattern. product Represents the whole product (e.g. 'openSUSE Leap 15.3'). What is a Package Manager? \u2693\ufe0e Software is incredibly interconnected. Programming a user interface, a developer's code will specify the location on the screen of widgets, such as buttons or text, and define how these things rearrange when a window is resized. But most code depends on some other code that serves as a 'backend' (often called a library ). For example, an application will rarely describe how to render a button, instead it will ask a library to do that for it. This allows for a number of benefits. Some people specialise on writing button drawing routines while others specialise on using those routines to create feature-full applications. Apps written for Linux use this principle a lot and it opens up a lot of opportunity. If 100 apps all use the same library, we could install that library once and all 100 apps could use that single copy when running. This has the following benefits: We save space! Instead of every graphical application containing the code necessary for drawing a button, we have that code installed once! If a library used by many is found to contain insecure code, buggy or slow code, the library can be fixed and updated and every app that uses it gains that improvement. We don't have to rely on developers tracking the libraries that they use and rebuilding their apps every time one changes. If you decide that you want to improve upon a library in some way. You can exchange the version on your computer with your modified version and all applications that use it will adopt your changes. This is a core principle in free software . However, there is a drawback. When installing software, we have to ensure that the libraries that it requires are also installed (known as dependencies), and when removing software, we cannot remove a dependency without checking to make sure that nothing else depends upon it -- or it will break the 'dependency-tree' of the operating system. To visualize the issue, consider the following illustration: lib5 lib6 / \\ / \\ lib1 lib3 lib4 \\ / \\ / softwareA softwareB Let's assume for simplicity that no other software requires lib4 . Under this assumption, if the user remove softwareB, they will want to remove lib4 , but neither lib3 nor lib6 , because the former is directly required by softwareA , while the latter is indirectly by softwareA via lib3 . In addition to this issue imagine the user updates softwareB so that it ends up depending on a new version of library lib4 , say lib4* . This means that we need to recast the above structure as: lib5 lib6 / \\ / \\ lib1 lib3 lib4 lib4* \\ / \\ / softwareA softwareB(updated) This means that the system must be able to 'see through' the actual versions of each package, so as to understand the path of their dependencies and warn about required alterations. These problems are solved with a package manager. Applications, libraries and many other things can built into packages which contains what you want install and a reference to any other packages that it depends on. The package manager is an essential piece of software that downloads, installs, uninstalls and updates packages for you. If you tell the package manager to install Firefox, it will download a package containing the firefox executable, as well as a number of packages that contain the dependencies of Firefox. It also holds a database of all installed packages so it knows when it can uninstall certain dependencies without breaking software on your computer. Zypper is the name of the package manager used by openSUSE and SUSE Enterprise Linux. Usage \u2693\ufe0e Zypper is a command line tool, meaning that it is used from within the terminal. Installing, updating and removing packages are operations that affect all users on the system and so many of these commands will not work unless they are run as a privileged user. Although special permissions can be granted to individual user accounts, it is simpler to run commands as the root user (the user with the most privilege). Prefixing a command with sudo (e.g. sudo zypper install firefox ) will ask for the password of the root user account and then runs the command as root . Info The components enclosed in brackets are not required, thus the simplest way to execute zypper is to type its name followed by a command. See zypper help for a list of general options and all commands. To get help for a specific command, type zypper help command # zypper [--GLOBAL-OPTIONS] <COMMAND> [--COMMAND-OPTIONS] [ARGUMENTS] # zypper <SUBCOMMAND> [--COMMAND-OPTIONS] [ARGUMENTS]` Note Whenever Zypper needs input, it lists possible answers in brackets next to the prompt text. To choose the default answer, press < Enter > (the default answer is printed in capitals, with the exception of non-ascii characters). Some prompts also have help available, in which case there is a question mark '?' listed as a possible answer. To make Zypper use the default answers without user interaction, use the --non-interactive global option. Commands \u2693\ufe0e A single command is given to zypper (without a leading -- ) to instruct it on what kind of task it should do. For example zypper install instructs zypper that we want to install something and zypper search instructs zypper that we want to search for a package. Tip The most used zypper commands have shorter aliases; for example, zypper in is the same as zypper install . zypper without any commands or arguments will print a list of commands and options. This manual is a great starting point but it does not cover all possible ways to use zypper. If you want to see all of the options that can be given to each subcommand in zypper, type: zypper <COMMAND> -h and it will show all of the different ways of configuring the command specified in an easy to read way. The Basics \u2693\ufe0e Installing packages \u2693\ufe0e To install a package type: # zypper install packagename or # zypper in packagename This will download the package you specified along with all of its dependencies and install them. If you want to install more than one package, you simply list them all: # zypper in package_1 package_2 ... package_n Searching for packages \u2693\ufe0e In order to install a package, you need to know its name. To search the repositories for a package type: # zypper search packagename or # zypper se packagename This will return a list of packages that contain your search string along with a summary, a type and whether they have been installed. Example: Search for Firefox # zypper se firefox Loading repository data... Reading installed packages... S | Name | Summary | Type ---+------------------------------------+----------------------------------------------+-------- i+ | MozillaFirefox | Mozilla Firefox Web Browser | package i+ | MozillaFirefox-branding-openSUSE | openSUSE branding of MozillaFirefox | package | MozillaFirefox-branding-upstream | Upstream branding for Firefox | package | MozillaFirefox-buildsymbols | Breakpad buildsymbols for Firefox | package | MozillaFirefox-devel | Devel package for Firefox | package | MozillaFirefox-translations-common | Common translations for Firefox | package | MozillaFirefox-translations-other | Extra translations for Firefox | package | eid-mw-firefox | Firefox Extension for Belgium eID Middleware | package | firefox-esr-branding-openSUSE | openSUSE branding of MozillaFirefox | package | firefox-uget-integrator | Integration of uGet with Firefox | package Adding a New Repository \u2693\ufe0e A repository is simply a source of packages. Zypper will already have a few added (the default for either Tumbleweed or Leap) but there are many reasons why you might want to add some more. You might need to install proprietary libraries such as cuda or non-free media codecs. To add a new repository type: zypper addrepo https://somerepo.com/something name or zypper ar https://somerepo.com/something [optional-name] If successful, zypper will report the settings of that repo: URI of the repository If the repository is enabled If the repository will be GPG checked The priority Understanding The Output Enabled / Disabled If a repository is disabled, it means that zypper still knows where it is but will not use it. You can enable repositories globally or for single commands. GPG check If a repository has GPG checks enabled, it means that your computer will save a key, which you will be asked if you trust it the first time you use a repository. After downloading a package, zypper will use this key to make sure that the download succeeded and the package is not corrupted. It also verifies that the package is authentic. If a hacker intercepts a package download in an attempt to load malicious software onto your computer, the evil package will fail the GPG check. Priority If two repositories contain the same package and you ask zypper to install it, it will automatically use a repository with a higher priority (lower number). Autorefresh If autorefresh is on, zypper will automatically download a fresh list of packages from the repository to ensure that it isn't going to give you out of date information or packages. Example: Adding the cuda Leap repo # sudo zypper ar https://developer.download.nvidia.com/compute/cuda/repos/opensuse15/x86_64/cuda-opensuse15.repo cuda [sudo] password for root: Adding repository 'cuda' ..................................................................................[done] Repository 'cuda' successfully added URI : https://developer.download.nvidia.com/compute/cuda/repos/opensuse15/x86_64 Enabled : Yes GPG Check : Yes Autorefresh : No Priority : 99 (default priority) Repository priorities are without effect. All enabled repositories share the same priority. Removing Repositories \u2693\ufe0e You might decide that we no longer need a repository. Maybe you broke your nvidia graphics card and feel that having the cuda repository just slows down zypper operations. You can remove a repository typing # zypper removerepo reponame or # zypper rr reponame Example: Removing the cuda repository # sudo zypper rr cuda [sudo] password for root: Removing repository 'cuda' ...............................................[done] Repository 'cuda' has been removed. Listing Repositories \u2693\ufe0e To list all of the installed repositories type: # zypper repos # zypper lr This will display a table containing information and names of all the added repos Example: Listing repositories # zypper lr Repository priorities are without effect. All enabled repositories share the same priority. # | Alias | Name | Enabled | GPG Check | Refresh --+-------------------+---------------------------+---------+-----------+-------- 1 | repo-debug | Debug Repository | No | ---- | ---- 2 | repo-debug-update | Update Repository (Debug) | No | ---- | ---- 3 | repo-oss | Main Repository | Yes | (r ) Yes | Yes 4 | repo-source | Source Repository | No | ---- | ---- 5 | repo-update | Main Update Repository | Yes | (r ) Yes | Yes Info See the info box in Adding a New Repository to understand the output Removing Packages \u2693\ufe0e Sometimes you will want to remove packages. To achieve this, we type: # zypper remove package or # zypper rm package Tip If your aim is to save space, you may way to add -u or --clean-deps e.g. sudo zypper rm -u firefox to remove the uneeded dependencies as well. Just like when installing, you can remove multiple packages at a time: # zypper rm package_1 package_2 ... package_n Refreshing your repositories \u2693\ufe0e Your computer stores a list of packages that each repository provides and metadata to help it work out what each package depends on. This is so that when you instruct zypper to do something, it can calculate the steps it will take without having to make many slow web requests. For some repositories, this offline list is automatically kept up to date (called autorefresh), but a lot of the time you will want to update this offline list yourself. Before updating, after adding a repository and before installing a package it is a good idea to update this list. You update it by typing: # zypper refresh or # zypper ref Updating Your Computer \u2693\ufe0e There are three different types of update that you can do with zypper Standard Update Patch Updates Distro Upgrade Standard updates simply check to see if newer versions of your packages exist in the repository. If there is a newer version, it will download and install it. Patches are groups of package updates. They are categorised so that you can see why they are being updated, for example often, when you ask zypper to list available patches, some will be labeled as security patches meaning that they fix a certain security that has been discovered in some packages on your system. Distro upgrades do not only update the packages on your system, but also change the source that you get your packages from. This is used mostly on tumbleweed. The build server where tumbleweed packages are build is a bit chaotic, packages are updated at an extremely high speed. A consequence of this is that incompatibilities between new packages emerge all over the place. So how does tumbleweed stay so stable? In regular intervals, a stable snapshot of the tumbleweed packages is found and frozen for a short amount of time. Tumbleweed users use the distro upgrade feature of zypper to get their updates and so they change their distribution to the newest snapshot. This means that zypper changes repositories to point to the newer snapshot, and then updates all the packages with respect to the new snapshot. This means that tumbleweed users can enjoy incredibly up to date packages without having to deal with too much instability. Don't be intimidated by the number of options available to you for updating. The golden rule is if you are on tumbleweed, do distro-upgrades and if you are on leap do normal upgrades. The exception to this rule is if you are in charge of a production system, such as a web-server (or any system where the only things scarier than change are security issues) then use patches to ensure that only the minimum amount of your system is touched by updates. Listing Updates \u2693\ufe0e To list all of packages that have updates waiting for them, type: # zypper list-updates or # zypper lu Zypper will print out a table that shows you the updatable packages, the repos they come from, the installed versions and the available versions. Example: Listing updates # zypper lu Loading repository data... Reading installed packages... S | Repository | Name | Current Version | Available Version | Arch --+------------------------+------------------+----------------------+----------------------+-------- v | Main Update Repository | grub2 | 2.04-lp152.7.18.2 | 2.04-lp152.7.22.7 | aarch64 v | Main Update Repository | grub2-arm64-efi | 2.04-lp152.7.18.2 | 2.04-lp152.7.22.7 | noarch v | Main Update Repository | hwdata | 0.343-lp152.2.3.1 | 0.345-lp152.2.6.1 | noarch v | Main Update Repository | libefivar1 | 37-lp152.3.6.1 | 37-lp152.3.9.1 | aarch64 v | Main Update Repository | libsolv-tools | 0.7.16-lp152.2.13.1 | 0.7.17-lp152.2.16.1 | aarch64 v | Main Update Repository | libz1 | 1.2.11-lp152.8.6.1 | 1.2.11-lp152.8.9.1 | aarch64 v | Main Update Repository | libzypp | 17.25.6-lp152.2.19.1 | 17.25.8-lp152.2.22.1 | aarch64 v | Main Update Repository | python3-solv | 0.7.16-lp152.2.13.1 | 0.7.17-lp152.2.16.1 | aarch64 v | Main Update Repository | ruby-solv | 0.7.16-lp152.2.13.1 | 0.7.17-lp152.2.16.1 | aarch64 v | Main Update Repository | tcl | 8.6.7-lp152.7.3.1 | 8.6.7-lp152.7.6.1 | aarch64 v | Main Update Repository | tk | 8.6.7-lp152.4.3.1 | 8.6.7-lp152.4.6.1 | aarch64 v | Main Update Repository | yast2-security | 4.2.19-lp152.2.12.1 | 4.2.23-lp152.2.15.1 | noarch v | Main Update Repository | yast2-storage-ng | 4.2.114-lp152.2.9.1 | 4.2.115-lp152.2.12.1 | aarch64 v | Main Update Repository | zypper | 1.14.42-lp152.2.15.1 | 1.14.43-lp152.2.18.1 | aarch64 v | Main Update Repository | zypper-aptitude | 1.14.42-lp152.2.15.1 | 1.14.43-lp152.2.18.1 | noarch Updating \u2693\ufe0e In order to install all necessary updates, you can simply type: # zypper update or # zypper up You also have the option to update just a select few packages. And this is done, just like with installing and removing, by listing the packages you want to update after the command: # zypper up package_1 package_2 ... package_n Checking for patches \u2693\ufe0e To check for available patches, type: # zypper patch-check or # zypper pchk This will print out a table that shows the number of patches available for your system and how important they are Example: Checking for patches # sudo zypper pchk Loading repository data... Reading installed packages... Found 8 applicable patches: Category | Updatestack | Patches ------------+-------------+-------- security | - | 1 recommended | 1 | 5 optional | - | 1 1 patch optional (use '--with-optional' to include optional patches) 7 patches needed (1 security patch) Listing patches \u2693\ufe0e If you looked at the example in the section above, you may have noticed that very little information is given about the patches. To see much better information about the patches themselves, type: # zypper list-patches or # zypper lp This will output at least one table showing you the name, id, priority and a little note about each set of patches. Example: Listing patches # zypper lp Loading repository data... Reading installed packages... Needed software management updates will be installed first: Repository | Name | Category | Severity | Interactive | Status | Summary -----------------------+-------------------+-------------+----------+-------------+--------+------------------------------------------------ Main Update Repository | openSUSE-2021-456 | recommended | moderate | restart | needed | Recommended update for libsolv, libzypp, zypper The following updates are also available: Repository | Name | Category | Severity | Interactive | Status | Summary -----------------------+-------------------+-------------+-----------+-------------+----------+---------------------------------------- Main Update Repository | openSUSE-2021-361 | optional | low | --- | optional | Optional update for tk and tcl Main Update Repository | openSUSE-2021-433 | recommended | moderate | --- | needed | Recommended update for yast2-storage-ng Main Update Repository | openSUSE-2021-434 | recommended | moderate | --- | needed | Recommended update for yast2-security Main Update Repository | openSUSE-2021-438 | recommended | moderate | --- | needed | Recommended update for efivar Main Update Repository | openSUSE-2021-439 | recommended | moderate | --- | needed | Recommended update for zlib Main Update Repository | openSUSE-2021-462 | security | important | --- | needed | Security update for grub2 Main Update Repository | openSUSE-2021-463 | recommended | low | --- | needed | Recommended update for hwdata Found 8 applicable patches: 1 patch optional (use '--with-optional' to include optional patches) 7 patches needed (1 security patch) Installing a patch \u2693\ufe0e To install all available patches type: # zypper patch If you want to specify a specific category of patches, type: # zypper patch -g CATEGORY Example: Applying only security patches # sudo zypper patch -g security Loading repository data... Reading installed packages... Patch 'openSUSE-2021-456-1' is not in the specified category. Patch 'openSUSE-2021-463-1' is not in the specified category. Patch 'openSUSE-2021-456-1' is not in the specified category. Patch 'openSUSE-2021-439-1' is not in the specified category. Patch 'openSUSE-2021-438-1' is not in the specified category. Patch 'openSUSE-2021-434-1' is not in the specified category. Patch 'openSUSE-2021-433-1' is not in the specified category. Patch 'openSUSE-2021-361-1' is optional. Use 'zypper in patch:openSUSE-2021-361' to install it, or '--with-optional' to include all optional patches. Resolving package dependencies... The following 3 NEW packages are going to be installed: dmraid grub2-systemd-sleep-plugin os-prober The following NEW patch is going to be installed: openSUSE-2021-462 The following 2 packages are going to be upgraded: grub2 grub2-arm64-efi 2 packages to upgrade, 3 new. Overall download size: 3.7 MiB. Already cached: 0 B. After the operation, additional 706.9 KiB will be used. Continue? [y/n/v/...? shows all options] (y): y Retrieving package dmraid-1.0.0.rc16-lp152.5.3.aarch64 (1/5), 133.8 KiB (528.0 KiB unpacked) Retrieving: dmraid-1.0.0.rc16-lp152.5.3.aarch64.rpm ..................................................................................[done] Retrieving package os-prober-1.76-lp152.3.2.aarch64 (2/5), 51.6 KiB (188.4 KiB unpacked) Retrieving: os-prober-1.76-lp152.3.2.aarch64.rpm .....................................................................................[done] Retrieving package grub2-2.04-lp152.7.22.7.aarch64 (3/5), 2.6 MiB ( 23.9 MiB unpacked) Retrieving: grub2-2.04-lp152.7.22.7.aarch64.rpm ..........................................................................[done (1.7 MiB/s)] Retrieving package grub2-systemd-sleep-plugin-2.04-lp152.7.22.7.noarch (4/5), 64.6 KiB ( 7.1 KiB unpacked) Retrieving: grub2-systemd-sleep-plugin-2.04-lp152.7.22.7.noarch.rpm ..................................................................[done] Retrieving package grub2-arm64-efi-2.04-lp152.7.22.7.noarch (5/5), 885.3 KiB ( 5.1 MiB unpacked) Retrieving: grub2-arm64-efi-2.04-lp152.7.22.7.noarch.rpm .................................................................[done (2.2 MiB/s)] Checking for file conflicts: .........................................................................................................[done] (1/5) Installing: dmraid-1.0.0.rc16-lp152.5.3.aarch64 ................................................................................[done] (2/5) Installing: os-prober-1.76-lp152.3.2.aarch64 ...................................................................................[done] (3/5) Installing: grub2-2.04-lp152.7.22.7.aarch64 ....................................................................................[done] (4/5) Installing: grub2-systemd-sleep-plugin-2.04-lp152.7.22.7.noarch ................................................................[done] (5/5) Installing: grub2-arm64-efi-2.04-lp152.7.22.7.noarch ...........................................................................[done] Distro upgrading \u2693\ufe0e To do a distro upgrade, type: # zypper dist-upgrade or # zypper dup More advanced commands \u2693\ufe0e Rename specified repository \u2693\ufe0e renamerepo or nr Modify specified repository \u2693\ufe0e modifyrepo or mr Clean local caches \u2693\ufe0e clean or cc Verify integrity of package dependencies \u2693\ufe0e verify or ve Install source packages and their build dependencies \u2693\ufe0e source-install or si Install newly added packages recommended by installed packages \u2693\ufe0e install-new-recommends or inr Show full information for specified packages \u2693\ufe0e info or if Example $ sudo zypper if [package] Show full information for specified patches \u2693\ufe0e patch-info Show full information for specified patterns \u2693\ufe0e pattern-info Show full information for specified products \u2693\ufe0e product-info List all available patches \u2693\ufe0e patches or pch List all available packages \u2693\ufe0e packages or pa List all available patterns \u2693\ufe0e patterns or pt List all available products \u2693\ufe0e products or pd Example # zypper pd Loading repository data... Reading installed packages... S | Repository | Internal Name | Name | Version | Arch | Is Base ---+-----------------------------+-----------------------+-----------------------+------------+--------+-------- i+ | @System | openSUSE | openSUSE Tumbleweed | 20201216-0 | x86_64 | Yes | openSUSE-Tumbleweed-Non-Oss | openSUSE-Addon-NonOss | openSUSE NonOSS Addon | 20201218-0 | x86_64 | No | openSUSE-Tumbleweed-Non-Oss | openSUSE-Addon-NonOss | openSUSE NonOSS Addon | 20201218-0 | i586 | No v | openSUSE-Tumbleweed-Oss | openSUSE | openSUSE Tumbleweed | 20201218-0 | x86_64 | No v | openSUSE-Tumbleweed-Oss | openSUSE | openSUSE Tumbleweed | 20201218-0 | i586 | No | openSUSE-Tumbleweed-Oss | MicroOS | openSUSE MicroOS | 20201218-0 | x86_64 | No | openSUSE-Tumbleweed-Oss | MicroOS | openSUSE MicroOS | 20201218-0 | i586 | No List packages providing specified capability \u2693\ufe0e what-provides or wp Add a package lock \u2693\ufe0e locks or ll Remove a package lock \u2693\ufe0e addlock or al List current package locks \u2693\ufe0e removelock or rl Remove useless locks \u2693\ufe0e cleanlocks or cl List requested locales (languages codes) \u2693\ufe0e locales or lloc Add locale(s) to requested locales \u2693\ufe0e addlocale or aloc Remove locale(s) from requested locales \u2693\ufe0e removelocale or rloc Get command-specific help \u2693\ufe0e help Example $ zypper help in Compare two version strings \u2693\ufe0e versioncmp or vcmp Print the target operating system ID string \u2693\ufe0e targetos or tos Print report about licenses and EULAs of installed packages \u2693\ufe0e licenses Download rpms specified on the commandline to a local directory \u2693\ufe0e download Download source rpms for all installed packages to a local directory \u2693\ufe0e source-download Check if the needs-reboot flag was set \u2693\ufe0e needs-rebooting List running processes which might still use files and libraries deleted by recent upgrades \u2693\ufe0e ps Example # zypper ps $ sudo zypper ps Remove old kernels \u2693\ufe0e purge-kernels Global Options \u2693\ufe0e Show Options Option Description Alias --color Use colors in output --config <FILE> Use specified config file instead of the default -c <FILE> --help Help -h --ignore-unknown Ignore unknown packages -i --no-abbrev Do not abbreviate text in tables -A --no-color Do no use colors in output --non-interactive Do not ask anything, use default answers automatically -n --promptids Output a list of zypper's user prompts --quiet Surpress normal output, print only error messages -q --table-style <INTEGER> Table style (0-11) -s <INTEGER> --terse Terse output for machine consumption -t --userdata <STRING> User defined transaction id used in history and plugins --verbose Increase verbosity -v --version Output the version number -V --xmlout Switch to XML output -x Repository Options \u2693\ufe0e Show Options Option Description Alias --disable-repositories Do not read meta-data from repositories --gpg-auto-import-keys Automatically trust and import new repository signing keys --no-gpg-checks Ingore GPG check failures --no-cd Ignore CD/DVD repositories --no-refresh Do not refresh the repositories --no-remote Ignore remote repositories --plus-content <TAG> Additionally use disabled repositories providing a specific keyword --plus-repo <URI> Use an additional repository -p <URI> --releasever Set the value of $releasever in all .repo files Command Options \u2693\ufe0e Info Command-specific options can be obtained using # zypper help <COMMAND> Example # zypper help in install (in) [OPTIONS] <CAPABILITY|RPM_FILE_URI> ... Install packages with specified capabilities or RPM files with specified location. A capability is NAME[.ARCH][OP<VERSION>], where OP is one of <, <=, =, >=, >. Command options: -t, --type <TYPE> Type of package (package, patch, pattern, product). -n, --name Select packages by plain name, not by capability. Default: false -C, --capability Select packages solely by capability. Default: false --details Show the detailed installation summary. Default: false --from <ALIAS|#|URI> Select packages from the specified repository. --oldpackage Allow to replace a newer item with an older one. Handy if you are doing a rollback. Unlike --force it will not enforce a reinstall. Default: false --allow-unsigned-rpm Silently install unsigned rpm packages given as commandline parameters. Default: false -f, --force Install even if the item is already installed (reinstall), downgraded or changes vendor or architecture. Default: false -r, --repo <ALIAS|#|URI> Work only with the specified repository. -y, --no-confirm Don't require user interaction. Alias for the --non-interactive global option. Default: false -D, --dry-run Don't change anything, just report what would be done. A meaningful file conflict check can only be performed if used together with '--download-only'. Default: false --replacefiles Install the packages even if they replace files from other, already installed, packages. Default is to treat file conflicts as an error. --download-as-needed disables the fileconflict check. Default: false -l, --auto-agree-with-licenses Automatically say 'yes' to third party license confirmation prompt. See 'man zypper' for more details. Default: false --download <MODE> Set the download-install mode. Available modes: only, in-advance, in-heaps, as-needed Default: DownloadDefault -d, --download-only Only download the packages, do not install. Solver options --debug-solver Create a solver test case for debugging. --force-resolution Force the solver to find a solution (even an aggressive one) rather than asking. -R, --no-force-resolution Do not force the solver to find a solution, let it ask. --solver-focus <MODE> Set the solvers general attitude when resolving a job. --recommends Install also recommended packages in addition to the required ones. --no-recommends Do not install recommended packages, only required ones. Expert options --allow-downgrade --no-allow-downgrade Whether to allow downgrading installed resolvables. --allow-name-change --no-allow-name-change Whether to allow changing the names of installed resolvables. --allow-arch-change --no-allow-arch-change Whether to allow changing the architecture of installed resolvables. --allow-vendor-change --no-allow-vendor-change Whether to allow changing the vendor of installed resolvables.","title":"Zypper"},{"location":"zypper/#zypper","text":"Zypper is a command line package manager for installing, updating and removing packages. It also manages repositories, can perform various queries, and is a command-line interface to ZYpp system management library (libzypp). Show Definitions repository Local or remote directory containing packages and various package information (package metadata). package Software package (RPM package, source package). Patches, patterns, and products are also commonly referred to as different types of packages. patch Represents a package or a group of packages needed to install an update (a bug fix mostly). pattern Represents a group of packages. For example an Http Server pattern would have the dependencies defined so that all packages needed to run and manage an http server would have been triggered for installation when upon installing the pattern. product Represents the whole product (e.g. 'openSUSE Leap 15.3').","title":"Zypper"},{"location":"zypper/#what-is-a-package-manager","text":"Software is incredibly interconnected. Programming a user interface, a developer's code will specify the location on the screen of widgets, such as buttons or text, and define how these things rearrange when a window is resized. But most code depends on some other code that serves as a 'backend' (often called a library ). For example, an application will rarely describe how to render a button, instead it will ask a library to do that for it. This allows for a number of benefits. Some people specialise on writing button drawing routines while others specialise on using those routines to create feature-full applications. Apps written for Linux use this principle a lot and it opens up a lot of opportunity. If 100 apps all use the same library, we could install that library once and all 100 apps could use that single copy when running. This has the following benefits: We save space! Instead of every graphical application containing the code necessary for drawing a button, we have that code installed once! If a library used by many is found to contain insecure code, buggy or slow code, the library can be fixed and updated and every app that uses it gains that improvement. We don't have to rely on developers tracking the libraries that they use and rebuilding their apps every time one changes. If you decide that you want to improve upon a library in some way. You can exchange the version on your computer with your modified version and all applications that use it will adopt your changes. This is a core principle in free software . However, there is a drawback. When installing software, we have to ensure that the libraries that it requires are also installed (known as dependencies), and when removing software, we cannot remove a dependency without checking to make sure that nothing else depends upon it -- or it will break the 'dependency-tree' of the operating system. To visualize the issue, consider the following illustration: lib5 lib6 / \\ / \\ lib1 lib3 lib4 \\ / \\ / softwareA softwareB Let's assume for simplicity that no other software requires lib4 . Under this assumption, if the user remove softwareB, they will want to remove lib4 , but neither lib3 nor lib6 , because the former is directly required by softwareA , while the latter is indirectly by softwareA via lib3 . In addition to this issue imagine the user updates softwareB so that it ends up depending on a new version of library lib4 , say lib4* . This means that we need to recast the above structure as: lib5 lib6 / \\ / \\ lib1 lib3 lib4 lib4* \\ / \\ / softwareA softwareB(updated) This means that the system must be able to 'see through' the actual versions of each package, so as to understand the path of their dependencies and warn about required alterations. These problems are solved with a package manager. Applications, libraries and many other things can built into packages which contains what you want install and a reference to any other packages that it depends on. The package manager is an essential piece of software that downloads, installs, uninstalls and updates packages for you. If you tell the package manager to install Firefox, it will download a package containing the firefox executable, as well as a number of packages that contain the dependencies of Firefox. It also holds a database of all installed packages so it knows when it can uninstall certain dependencies without breaking software on your computer. Zypper is the name of the package manager used by openSUSE and SUSE Enterprise Linux.","title":"What is a Package Manager?"},{"location":"zypper/#usage","text":"Zypper is a command line tool, meaning that it is used from within the terminal. Installing, updating and removing packages are operations that affect all users on the system and so many of these commands will not work unless they are run as a privileged user. Although special permissions can be granted to individual user accounts, it is simpler to run commands as the root user (the user with the most privilege). Prefixing a command with sudo (e.g. sudo zypper install firefox ) will ask for the password of the root user account and then runs the command as root . Info The components enclosed in brackets are not required, thus the simplest way to execute zypper is to type its name followed by a command. See zypper help for a list of general options and all commands. To get help for a specific command, type zypper help command # zypper [--GLOBAL-OPTIONS] <COMMAND> [--COMMAND-OPTIONS] [ARGUMENTS] # zypper <SUBCOMMAND> [--COMMAND-OPTIONS] [ARGUMENTS]` Note Whenever Zypper needs input, it lists possible answers in brackets next to the prompt text. To choose the default answer, press < Enter > (the default answer is printed in capitals, with the exception of non-ascii characters). Some prompts also have help available, in which case there is a question mark '?' listed as a possible answer. To make Zypper use the default answers without user interaction, use the --non-interactive global option.","title":"Usage"},{"location":"zypper/#commands","text":"A single command is given to zypper (without a leading -- ) to instruct it on what kind of task it should do. For example zypper install instructs zypper that we want to install something and zypper search instructs zypper that we want to search for a package. Tip The most used zypper commands have shorter aliases; for example, zypper in is the same as zypper install . zypper without any commands or arguments will print a list of commands and options. This manual is a great starting point but it does not cover all possible ways to use zypper. If you want to see all of the options that can be given to each subcommand in zypper, type: zypper <COMMAND> -h and it will show all of the different ways of configuring the command specified in an easy to read way.","title":"Commands"},{"location":"zypper/#the-basics","text":"","title":"The Basics"},{"location":"zypper/#installing-packages","text":"To install a package type: # zypper install packagename or # zypper in packagename This will download the package you specified along with all of its dependencies and install them. If you want to install more than one package, you simply list them all: # zypper in package_1 package_2 ... package_n","title":"Installing packages"},{"location":"zypper/#searching-for-packages","text":"In order to install a package, you need to know its name. To search the repositories for a package type: # zypper search packagename or # zypper se packagename This will return a list of packages that contain your search string along with a summary, a type and whether they have been installed. Example: Search for Firefox # zypper se firefox Loading repository data... Reading installed packages... S | Name | Summary | Type ---+------------------------------------+----------------------------------------------+-------- i+ | MozillaFirefox | Mozilla Firefox Web Browser | package i+ | MozillaFirefox-branding-openSUSE | openSUSE branding of MozillaFirefox | package | MozillaFirefox-branding-upstream | Upstream branding for Firefox | package | MozillaFirefox-buildsymbols | Breakpad buildsymbols for Firefox | package | MozillaFirefox-devel | Devel package for Firefox | package | MozillaFirefox-translations-common | Common translations for Firefox | package | MozillaFirefox-translations-other | Extra translations for Firefox | package | eid-mw-firefox | Firefox Extension for Belgium eID Middleware | package | firefox-esr-branding-openSUSE | openSUSE branding of MozillaFirefox | package | firefox-uget-integrator | Integration of uGet with Firefox | package","title":"Searching for packages"},{"location":"zypper/#adding-a-new-repository","text":"A repository is simply a source of packages. Zypper will already have a few added (the default for either Tumbleweed or Leap) but there are many reasons why you might want to add some more. You might need to install proprietary libraries such as cuda or non-free media codecs. To add a new repository type: zypper addrepo https://somerepo.com/something name or zypper ar https://somerepo.com/something [optional-name] If successful, zypper will report the settings of that repo: URI of the repository If the repository is enabled If the repository will be GPG checked The priority Understanding The Output Enabled / Disabled If a repository is disabled, it means that zypper still knows where it is but will not use it. You can enable repositories globally or for single commands. GPG check If a repository has GPG checks enabled, it means that your computer will save a key, which you will be asked if you trust it the first time you use a repository. After downloading a package, zypper will use this key to make sure that the download succeeded and the package is not corrupted. It also verifies that the package is authentic. If a hacker intercepts a package download in an attempt to load malicious software onto your computer, the evil package will fail the GPG check. Priority If two repositories contain the same package and you ask zypper to install it, it will automatically use a repository with a higher priority (lower number). Autorefresh If autorefresh is on, zypper will automatically download a fresh list of packages from the repository to ensure that it isn't going to give you out of date information or packages. Example: Adding the cuda Leap repo # sudo zypper ar https://developer.download.nvidia.com/compute/cuda/repos/opensuse15/x86_64/cuda-opensuse15.repo cuda [sudo] password for root: Adding repository 'cuda' ..................................................................................[done] Repository 'cuda' successfully added URI : https://developer.download.nvidia.com/compute/cuda/repos/opensuse15/x86_64 Enabled : Yes GPG Check : Yes Autorefresh : No Priority : 99 (default priority) Repository priorities are without effect. All enabled repositories share the same priority.","title":"Adding a New Repository"},{"location":"zypper/#removing-repositories","text":"You might decide that we no longer need a repository. Maybe you broke your nvidia graphics card and feel that having the cuda repository just slows down zypper operations. You can remove a repository typing # zypper removerepo reponame or # zypper rr reponame Example: Removing the cuda repository # sudo zypper rr cuda [sudo] password for root: Removing repository 'cuda' ...............................................[done] Repository 'cuda' has been removed.","title":"Removing Repositories"},{"location":"zypper/#listing-repositories","text":"To list all of the installed repositories type: # zypper repos # zypper lr This will display a table containing information and names of all the added repos Example: Listing repositories # zypper lr Repository priorities are without effect. All enabled repositories share the same priority. # | Alias | Name | Enabled | GPG Check | Refresh --+-------------------+---------------------------+---------+-----------+-------- 1 | repo-debug | Debug Repository | No | ---- | ---- 2 | repo-debug-update | Update Repository (Debug) | No | ---- | ---- 3 | repo-oss | Main Repository | Yes | (r ) Yes | Yes 4 | repo-source | Source Repository | No | ---- | ---- 5 | repo-update | Main Update Repository | Yes | (r ) Yes | Yes Info See the info box in Adding a New Repository to understand the output","title":"Listing Repositories"},{"location":"zypper/#removing-packages","text":"Sometimes you will want to remove packages. To achieve this, we type: # zypper remove package or # zypper rm package Tip If your aim is to save space, you may way to add -u or --clean-deps e.g. sudo zypper rm -u firefox to remove the uneeded dependencies as well. Just like when installing, you can remove multiple packages at a time: # zypper rm package_1 package_2 ... package_n","title":"Removing Packages"},{"location":"zypper/#refreshing-your-repositories","text":"Your computer stores a list of packages that each repository provides and metadata to help it work out what each package depends on. This is so that when you instruct zypper to do something, it can calculate the steps it will take without having to make many slow web requests. For some repositories, this offline list is automatically kept up to date (called autorefresh), but a lot of the time you will want to update this offline list yourself. Before updating, after adding a repository and before installing a package it is a good idea to update this list. You update it by typing: # zypper refresh or # zypper ref","title":"Refreshing your repositories"},{"location":"zypper/#updating-your-computer","text":"There are three different types of update that you can do with zypper Standard Update Patch Updates Distro Upgrade Standard updates simply check to see if newer versions of your packages exist in the repository. If there is a newer version, it will download and install it. Patches are groups of package updates. They are categorised so that you can see why they are being updated, for example often, when you ask zypper to list available patches, some will be labeled as security patches meaning that they fix a certain security that has been discovered in some packages on your system. Distro upgrades do not only update the packages on your system, but also change the source that you get your packages from. This is used mostly on tumbleweed. The build server where tumbleweed packages are build is a bit chaotic, packages are updated at an extremely high speed. A consequence of this is that incompatibilities between new packages emerge all over the place. So how does tumbleweed stay so stable? In regular intervals, a stable snapshot of the tumbleweed packages is found and frozen for a short amount of time. Tumbleweed users use the distro upgrade feature of zypper to get their updates and so they change their distribution to the newest snapshot. This means that zypper changes repositories to point to the newer snapshot, and then updates all the packages with respect to the new snapshot. This means that tumbleweed users can enjoy incredibly up to date packages without having to deal with too much instability. Don't be intimidated by the number of options available to you for updating. The golden rule is if you are on tumbleweed, do distro-upgrades and if you are on leap do normal upgrades. The exception to this rule is if you are in charge of a production system, such as a web-server (or any system where the only things scarier than change are security issues) then use patches to ensure that only the minimum amount of your system is touched by updates.","title":"Updating Your Computer"},{"location":"zypper/#listing-updates","text":"To list all of packages that have updates waiting for them, type: # zypper list-updates or # zypper lu Zypper will print out a table that shows you the updatable packages, the repos they come from, the installed versions and the available versions. Example: Listing updates # zypper lu Loading repository data... Reading installed packages... S | Repository | Name | Current Version | Available Version | Arch --+------------------------+------------------+----------------------+----------------------+-------- v | Main Update Repository | grub2 | 2.04-lp152.7.18.2 | 2.04-lp152.7.22.7 | aarch64 v | Main Update Repository | grub2-arm64-efi | 2.04-lp152.7.18.2 | 2.04-lp152.7.22.7 | noarch v | Main Update Repository | hwdata | 0.343-lp152.2.3.1 | 0.345-lp152.2.6.1 | noarch v | Main Update Repository | libefivar1 | 37-lp152.3.6.1 | 37-lp152.3.9.1 | aarch64 v | Main Update Repository | libsolv-tools | 0.7.16-lp152.2.13.1 | 0.7.17-lp152.2.16.1 | aarch64 v | Main Update Repository | libz1 | 1.2.11-lp152.8.6.1 | 1.2.11-lp152.8.9.1 | aarch64 v | Main Update Repository | libzypp | 17.25.6-lp152.2.19.1 | 17.25.8-lp152.2.22.1 | aarch64 v | Main Update Repository | python3-solv | 0.7.16-lp152.2.13.1 | 0.7.17-lp152.2.16.1 | aarch64 v | Main Update Repository | ruby-solv | 0.7.16-lp152.2.13.1 | 0.7.17-lp152.2.16.1 | aarch64 v | Main Update Repository | tcl | 8.6.7-lp152.7.3.1 | 8.6.7-lp152.7.6.1 | aarch64 v | Main Update Repository | tk | 8.6.7-lp152.4.3.1 | 8.6.7-lp152.4.6.1 | aarch64 v | Main Update Repository | yast2-security | 4.2.19-lp152.2.12.1 | 4.2.23-lp152.2.15.1 | noarch v | Main Update Repository | yast2-storage-ng | 4.2.114-lp152.2.9.1 | 4.2.115-lp152.2.12.1 | aarch64 v | Main Update Repository | zypper | 1.14.42-lp152.2.15.1 | 1.14.43-lp152.2.18.1 | aarch64 v | Main Update Repository | zypper-aptitude | 1.14.42-lp152.2.15.1 | 1.14.43-lp152.2.18.1 | noarch","title":"Listing Updates"},{"location":"zypper/#updating","text":"In order to install all necessary updates, you can simply type: # zypper update or # zypper up You also have the option to update just a select few packages. And this is done, just like with installing and removing, by listing the packages you want to update after the command: # zypper up package_1 package_2 ... package_n","title":"Updating"},{"location":"zypper/#checking-for-patches","text":"To check for available patches, type: # zypper patch-check or # zypper pchk This will print out a table that shows the number of patches available for your system and how important they are Example: Checking for patches # sudo zypper pchk Loading repository data... Reading installed packages... Found 8 applicable patches: Category | Updatestack | Patches ------------+-------------+-------- security | - | 1 recommended | 1 | 5 optional | - | 1 1 patch optional (use '--with-optional' to include optional patches) 7 patches needed (1 security patch)","title":"Checking for patches"},{"location":"zypper/#listing-patches","text":"If you looked at the example in the section above, you may have noticed that very little information is given about the patches. To see much better information about the patches themselves, type: # zypper list-patches or # zypper lp This will output at least one table showing you the name, id, priority and a little note about each set of patches. Example: Listing patches # zypper lp Loading repository data... Reading installed packages... Needed software management updates will be installed first: Repository | Name | Category | Severity | Interactive | Status | Summary -----------------------+-------------------+-------------+----------+-------------+--------+------------------------------------------------ Main Update Repository | openSUSE-2021-456 | recommended | moderate | restart | needed | Recommended update for libsolv, libzypp, zypper The following updates are also available: Repository | Name | Category | Severity | Interactive | Status | Summary -----------------------+-------------------+-------------+-----------+-------------+----------+---------------------------------------- Main Update Repository | openSUSE-2021-361 | optional | low | --- | optional | Optional update for tk and tcl Main Update Repository | openSUSE-2021-433 | recommended | moderate | --- | needed | Recommended update for yast2-storage-ng Main Update Repository | openSUSE-2021-434 | recommended | moderate | --- | needed | Recommended update for yast2-security Main Update Repository | openSUSE-2021-438 | recommended | moderate | --- | needed | Recommended update for efivar Main Update Repository | openSUSE-2021-439 | recommended | moderate | --- | needed | Recommended update for zlib Main Update Repository | openSUSE-2021-462 | security | important | --- | needed | Security update for grub2 Main Update Repository | openSUSE-2021-463 | recommended | low | --- | needed | Recommended update for hwdata Found 8 applicable patches: 1 patch optional (use '--with-optional' to include optional patches) 7 patches needed (1 security patch)","title":"Listing patches"},{"location":"zypper/#installing-a-patch","text":"To install all available patches type: # zypper patch If you want to specify a specific category of patches, type: # zypper patch -g CATEGORY Example: Applying only security patches # sudo zypper patch -g security Loading repository data... Reading installed packages... Patch 'openSUSE-2021-456-1' is not in the specified category. Patch 'openSUSE-2021-463-1' is not in the specified category. Patch 'openSUSE-2021-456-1' is not in the specified category. Patch 'openSUSE-2021-439-1' is not in the specified category. Patch 'openSUSE-2021-438-1' is not in the specified category. Patch 'openSUSE-2021-434-1' is not in the specified category. Patch 'openSUSE-2021-433-1' is not in the specified category. Patch 'openSUSE-2021-361-1' is optional. Use 'zypper in patch:openSUSE-2021-361' to install it, or '--with-optional' to include all optional patches. Resolving package dependencies... The following 3 NEW packages are going to be installed: dmraid grub2-systemd-sleep-plugin os-prober The following NEW patch is going to be installed: openSUSE-2021-462 The following 2 packages are going to be upgraded: grub2 grub2-arm64-efi 2 packages to upgrade, 3 new. Overall download size: 3.7 MiB. Already cached: 0 B. After the operation, additional 706.9 KiB will be used. Continue? [y/n/v/...? shows all options] (y): y Retrieving package dmraid-1.0.0.rc16-lp152.5.3.aarch64 (1/5), 133.8 KiB (528.0 KiB unpacked) Retrieving: dmraid-1.0.0.rc16-lp152.5.3.aarch64.rpm ..................................................................................[done] Retrieving package os-prober-1.76-lp152.3.2.aarch64 (2/5), 51.6 KiB (188.4 KiB unpacked) Retrieving: os-prober-1.76-lp152.3.2.aarch64.rpm .....................................................................................[done] Retrieving package grub2-2.04-lp152.7.22.7.aarch64 (3/5), 2.6 MiB ( 23.9 MiB unpacked) Retrieving: grub2-2.04-lp152.7.22.7.aarch64.rpm ..........................................................................[done (1.7 MiB/s)] Retrieving package grub2-systemd-sleep-plugin-2.04-lp152.7.22.7.noarch (4/5), 64.6 KiB ( 7.1 KiB unpacked) Retrieving: grub2-systemd-sleep-plugin-2.04-lp152.7.22.7.noarch.rpm ..................................................................[done] Retrieving package grub2-arm64-efi-2.04-lp152.7.22.7.noarch (5/5), 885.3 KiB ( 5.1 MiB unpacked) Retrieving: grub2-arm64-efi-2.04-lp152.7.22.7.noarch.rpm .................................................................[done (2.2 MiB/s)] Checking for file conflicts: .........................................................................................................[done] (1/5) Installing: dmraid-1.0.0.rc16-lp152.5.3.aarch64 ................................................................................[done] (2/5) Installing: os-prober-1.76-lp152.3.2.aarch64 ...................................................................................[done] (3/5) Installing: grub2-2.04-lp152.7.22.7.aarch64 ....................................................................................[done] (4/5) Installing: grub2-systemd-sleep-plugin-2.04-lp152.7.22.7.noarch ................................................................[done] (5/5) Installing: grub2-arm64-efi-2.04-lp152.7.22.7.noarch ...........................................................................[done]","title":"Installing a patch"},{"location":"zypper/#distro-upgrading","text":"To do a distro upgrade, type: # zypper dist-upgrade or # zypper dup","title":"Distro upgrading"},{"location":"zypper/#more-advanced-commands","text":"","title":"More advanced commands"},{"location":"zypper/#rename-specified-repository","text":"renamerepo or nr","title":"Rename specified repository"},{"location":"zypper/#modify-specified-repository","text":"modifyrepo or mr","title":"Modify specified repository"},{"location":"zypper/#clean-local-caches","text":"clean or cc","title":"Clean local caches"},{"location":"zypper/#verify-integrity-of-package-dependencies","text":"verify or ve","title":"Verify integrity of package dependencies"},{"location":"zypper/#install-source-packages-and-their-build-dependencies","text":"source-install or si","title":"Install source packages and their build dependencies"},{"location":"zypper/#install-newly-added-packages-recommended-by-installed-packages","text":"install-new-recommends or inr","title":"Install newly added packages recommended by installed packages"},{"location":"zypper/#show-full-information-for-specified-packages","text":"info or if Example $ sudo zypper if [package]","title":"Show full information for specified packages"},{"location":"zypper/#show-full-information-for-specified-patches","text":"patch-info","title":"Show full information for specified patches"},{"location":"zypper/#show-full-information-for-specified-patterns","text":"pattern-info","title":"Show full information for specified patterns"},{"location":"zypper/#show-full-information-for-specified-products","text":"product-info","title":"Show full information for specified products"},{"location":"zypper/#list-all-available-patches","text":"patches or pch","title":"List all available patches"},{"location":"zypper/#list-all-available-packages","text":"packages or pa","title":"List all available packages"},{"location":"zypper/#list-all-available-patterns","text":"patterns or pt","title":"List all available patterns"},{"location":"zypper/#list-all-available-products","text":"products or pd Example # zypper pd Loading repository data... Reading installed packages... S | Repository | Internal Name | Name | Version | Arch | Is Base ---+-----------------------------+-----------------------+-----------------------+------------+--------+-------- i+ | @System | openSUSE | openSUSE Tumbleweed | 20201216-0 | x86_64 | Yes | openSUSE-Tumbleweed-Non-Oss | openSUSE-Addon-NonOss | openSUSE NonOSS Addon | 20201218-0 | x86_64 | No | openSUSE-Tumbleweed-Non-Oss | openSUSE-Addon-NonOss | openSUSE NonOSS Addon | 20201218-0 | i586 | No v | openSUSE-Tumbleweed-Oss | openSUSE | openSUSE Tumbleweed | 20201218-0 | x86_64 | No v | openSUSE-Tumbleweed-Oss | openSUSE | openSUSE Tumbleweed | 20201218-0 | i586 | No | openSUSE-Tumbleweed-Oss | MicroOS | openSUSE MicroOS | 20201218-0 | x86_64 | No | openSUSE-Tumbleweed-Oss | MicroOS | openSUSE MicroOS | 20201218-0 | i586 | No","title":"List all available products"},{"location":"zypper/#list-packages-providing-specified-capability","text":"what-provides or wp","title":"List packages providing specified capability"},{"location":"zypper/#add-a-package-lock","text":"locks or ll","title":"Add a package lock"},{"location":"zypper/#remove-a-package-lock","text":"addlock or al","title":"Remove a package lock"},{"location":"zypper/#list-current-package-locks","text":"removelock or rl","title":"List current package locks"},{"location":"zypper/#remove-useless-locks","text":"cleanlocks or cl","title":"Remove useless locks"},{"location":"zypper/#list-requested-locales-languages-codes","text":"locales or lloc","title":"List requested locales (languages codes)"},{"location":"zypper/#add-locales-to-requested-locales","text":"addlocale or aloc","title":"Add locale(s) to requested locales"},{"location":"zypper/#remove-locales-from-requested-locales","text":"removelocale or rloc","title":"Remove locale(s) from requested locales"},{"location":"zypper/#get-command-specific-help","text":"help Example $ zypper help in","title":"Get command-specific help"},{"location":"zypper/#compare-two-version-strings","text":"versioncmp or vcmp","title":"Compare two version strings"},{"location":"zypper/#print-the-target-operating-system-id-string","text":"targetos or tos","title":"Print the target operating system ID string"},{"location":"zypper/#print-report-about-licenses-and-eulas-of-installed-packages","text":"licenses","title":"Print report about licenses and EULAs of installed packages"},{"location":"zypper/#download-rpms-specified-on-the-commandline-to-a-local-directory","text":"download","title":"Download rpms specified on the commandline to a local directory"},{"location":"zypper/#download-source-rpms-for-all-installed-packages-to-a-local-directory","text":"source-download","title":"Download source rpms for all installed packages to a local directory"},{"location":"zypper/#check-if-the-needs-reboot-flag-was-set","text":"needs-rebooting","title":"Check if the needs-reboot flag was set"},{"location":"zypper/#list-running-processes-which-might-still-use-files-and-libraries-deleted-by-recent-upgrades","text":"ps Example # zypper ps $ sudo zypper ps","title":"List running processes which might still use files and libraries deleted by recent upgrades"},{"location":"zypper/#remove-old-kernels","text":"purge-kernels","title":"Remove old kernels"},{"location":"zypper/#global-options","text":"Show Options Option Description Alias --color Use colors in output --config <FILE> Use specified config file instead of the default -c <FILE> --help Help -h --ignore-unknown Ignore unknown packages -i --no-abbrev Do not abbreviate text in tables -A --no-color Do no use colors in output --non-interactive Do not ask anything, use default answers automatically -n --promptids Output a list of zypper's user prompts --quiet Surpress normal output, print only error messages -q --table-style <INTEGER> Table style (0-11) -s <INTEGER> --terse Terse output for machine consumption -t --userdata <STRING> User defined transaction id used in history and plugins --verbose Increase verbosity -v --version Output the version number -V --xmlout Switch to XML output -x","title":"Global Options"},{"location":"zypper/#repository-options","text":"Show Options Option Description Alias --disable-repositories Do not read meta-data from repositories --gpg-auto-import-keys Automatically trust and import new repository signing keys --no-gpg-checks Ingore GPG check failures --no-cd Ignore CD/DVD repositories --no-refresh Do not refresh the repositories --no-remote Ignore remote repositories --plus-content <TAG> Additionally use disabled repositories providing a specific keyword --plus-repo <URI> Use an additional repository -p <URI> --releasever Set the value of $releasever in all .repo files","title":"Repository Options"},{"location":"zypper/#command-options","text":"Info Command-specific options can be obtained using # zypper help <COMMAND> Example # zypper help in install (in) [OPTIONS] <CAPABILITY|RPM_FILE_URI> ... Install packages with specified capabilities or RPM files with specified location. A capability is NAME[.ARCH][OP<VERSION>], where OP is one of <, <=, =, >=, >. Command options: -t, --type <TYPE> Type of package (package, patch, pattern, product). -n, --name Select packages by plain name, not by capability. Default: false -C, --capability Select packages solely by capability. Default: false --details Show the detailed installation summary. Default: false --from <ALIAS|#|URI> Select packages from the specified repository. --oldpackage Allow to replace a newer item with an older one. Handy if you are doing a rollback. Unlike --force it will not enforce a reinstall. Default: false --allow-unsigned-rpm Silently install unsigned rpm packages given as commandline parameters. Default: false -f, --force Install even if the item is already installed (reinstall), downgraded or changes vendor or architecture. Default: false -r, --repo <ALIAS|#|URI> Work only with the specified repository. -y, --no-confirm Don't require user interaction. Alias for the --non-interactive global option. Default: false -D, --dry-run Don't change anything, just report what would be done. A meaningful file conflict check can only be performed if used together with '--download-only'. Default: false --replacefiles Install the packages even if they replace files from other, already installed, packages. Default is to treat file conflicts as an error. --download-as-needed disables the fileconflict check. Default: false -l, --auto-agree-with-licenses Automatically say 'yes' to third party license confirmation prompt. See 'man zypper' for more details. Default: false --download <MODE> Set the download-install mode. Available modes: only, in-advance, in-heaps, as-needed Default: DownloadDefault -d, --download-only Only download the packages, do not install. Solver options --debug-solver Create a solver test case for debugging. --force-resolution Force the solver to find a solution (even an aggressive one) rather than asking. -R, --no-force-resolution Do not force the solver to find a solution, let it ask. --solver-focus <MODE> Set the solvers general attitude when resolving a job. --recommends Install also recommended packages in addition to the required ones. --no-recommends Do not install recommended packages, only required ones. Expert options --allow-downgrade --no-allow-downgrade Whether to allow downgrading installed resolvables. --allow-name-change --no-allow-name-change Whether to allow changing the names of installed resolvables. --allow-arch-change --no-allow-arch-change Whether to allow changing the architecture of installed resolvables. --allow-vendor-change --no-allow-vendor-change Whether to allow changing the vendor of installed resolvables.","title":"Command Options"}]}